window.searchIndex = {"fields":["title","body"],"pipeline":["trimmer","stopWordFilter","stemmer"],"ref":"id","version":"0.9.5","index":{"body":{"root":{"docs":{},"df":0,"0":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":8,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}},"3":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}},"5":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}},"x":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1,"1":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":1},"2":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1},"3":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1},"4":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1},"5":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}},"1":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.7320508075688772},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":2.23606797749979}},"df":7,".":{"docs":{},"df":0,"0":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1},"3":{"docs":{},"df":0,".":{"docs":{},"df":0,"2":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}}},"0":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.7320508075688772},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":2,"0":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":2,"p":{"docs":{},"df":0,"x":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"x":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}},"2":{"docs":{},"df":0,"0":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951}},"df":1},"7":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,":":{"docs":{},"df":0,"4":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"4":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}}},"5":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1},"6":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1},"9":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}},"2":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.23606797749979},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":6,".":{"docs":{},"df":0,"0":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":2},"3":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}},"0":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1,"0":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1},"1":{"docs":{},"df":0,"6":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1},"7":{"docs":{"https://naps62.com/speaking/":{"tf":1.0}},"df":1},"8":{"docs":{"https://naps62.com/speaking/":{"tf":1.0}},"df":1},"9":{"docs":{"https://naps62.com/speaking/":{"tf":1.0}},"df":1}},"2":{"docs":{},"df":0,"0":{"docs":{"https://naps62.com/speaking/":{"tf":1.0}},"df":1},"3":{"docs":{"https://naps62.com/speaking/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"x":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}},"5":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1},"s":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951}},"df":1}},"3":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.7320508075688772},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.7320508075688772}},"df":9,"d":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.23606797749979}},"df":1},"r":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":2}}},"4":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.7320508075688772}},"df":3,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":1,":":{"docs":{},"df":0,"4":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"5":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}},"k":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951}},"df":1}},"5":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951}},"df":2,"0":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1,"p":{"docs":{},"df":0,"x":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}},"6":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":2,"0":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}}},"7":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":2},"8":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1,"0":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":2}},"_":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":4,"]":{"docs":{},"df":0,"{":{"docs":{},"df":0,"3":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}},"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}}}}}}},"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":2}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":1}}}}}}}}},":":{"docs":{},"df":0,"s":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1}}}}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}},"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":7}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.4142135623730951}},"df":2}},"v":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":9}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951}},"df":1}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":3}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/knowledge-base/":{"tf":1.7320508075688772},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.23606797749979},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.23606797749979}},"df":5}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":3}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":1}}}},"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}},"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.7320508075688772},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":3}}}},"t":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":4.242640687119285},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.7320508075688772},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.4142135623730951}},"df":4,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"@":{"docs":{},"df":0,"v":{"docs":{},"df":0,"2":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}},"v":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.23606797749979},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.449489742783178},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.7320508075688772}},"df":13}}}}},"d":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":6,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":3.3166247903554}},"df":2}}},"d":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.23606797749979}},"df":10,"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":5,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":2}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":2}}}}},"j":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":3.3166247903554},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":4.0}},"df":2,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951}},"df":1,":":{"docs":{},"df":0,"4":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}}}}}}},"l":{"docs":{},"df":0,"v":{"docs":{},"df":0,"h":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}},"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":2},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.7320508075688772}},"df":4}}}}},"i":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/speaking/":{"tf":1.0}},"df":1},"s":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":2}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":1}}}}}}}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":6,"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951}},"df":1}}}}},"i":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}},"o":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":4}},"i":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1,"m":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1},"y":{"docs":{},"df":0,".":{"docs":{},"df":0,"y":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{},"df":0,"'":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}}}}}}}}}}}},"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":6}}}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"a":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":1,"s":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"1":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"0":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}}}}}},"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"w":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":2.23606797749979},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":2.449489742783178},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.7320508075688772},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.23606797749979}},"df":10}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":2}}},"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":11}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":1}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":2.8284271247461903},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.7320508075688772},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772}},"df":4}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":3}}}}},"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.7320508075688772},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":6}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.7320508075688772}},"df":5}}}},"p":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":5,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":2}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":1}}}}},"d":{"docs":{},"df":0,"/":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}}}},"g":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951}},"df":1}},"i":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":3.872983346207417}},"df":1}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.7320508075688772}},"df":1},"y":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":2.23606797749979},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":8}}},"y":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":7}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":2}}}}}},"p":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.449489742783178},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":7},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}}}}}}},"p":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":5.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.7320508075688772},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":4.123105625617661}},"df":6,"/":{"docs":{},"df":0,"*":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":2}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1}}},"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1}}}}}}}}}},"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"a":{"docs":{},"df":0,"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"{":{"docs":{},"df":0,"}":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":2}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":2}}},"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.6457513110645907},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":6,"c":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.449489742783178},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.449489742783178},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.8284271247461903},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":7,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"df":0,"j":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}},"’":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.23606797749979},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":8}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":4}}},"v":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1},"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"y":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"'":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":6}}}}}},"—":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}}}}},"—":{"docs":{},"df":0,"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}}}}}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":3}}}}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"’":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":2}}}},"g":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":2,"u":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":3}}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951}},"df":3}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.0}},"df":1,".":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951}},"df":1,"i":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":3,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":4}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}},"k":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":2},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.0}},"df":1}},"t":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":3,"p":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":3.0}},"df":1},"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":2}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":3.872983346207417}},"df":1}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.4142135623730951}},"df":2}}}}}}},"u":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951}},"df":1}},"o":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951}},"df":1,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,".":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":2.0}},"df":1}}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":4}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"m":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":2.23606797749979}},"df":2}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951}},"df":1}}}}}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1}}}}},"m":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":3,"a":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":7}}}}}},"v":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":1,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":1}}}}}}}}},"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":3}}},"d":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":2}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":2},"y":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":4}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":5}}}},"k":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":2}}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}}},"x":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951}},"df":1}}},"b":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"x":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":2.6457513110645907}},"df":1}}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.7320508075688772},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":10,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":1}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/speaking/":{"tf":1.0}},"df":4,".":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}}}}}}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":2.23606797749979}},"df":1}}}}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1},"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951}},"df":3,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":1}}}},"e":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":4.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":6,"_":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.0}},"df":1}}}}}}}}}}}},"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":4}}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}},"z":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}},"e":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":6,"a":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":2}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":2}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":7}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":3,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"'":{"docs":{"https://naps62.com/speaking/":{"tf":1.0}},"df":1}}}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"v":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":4},"u":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":4.69041575982343}},"df":2}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":3}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}},"w":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":3}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":3}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}},"t":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"a":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/speaking/":{"tf":1.0}},"df":2},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":7}}},"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.7320508075688772},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":2.23606797749979},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":8}}}}},"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":2}}}}},"i":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":2}}}},"n":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":2}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.23606797749979}},"df":2}}}},"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.7320508075688772},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.7320508075688772}},"df":8,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}}},"z":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":4.47213595499958}},"df":6,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":2.6457513110645907},"https://naps62.com/speaking/":{"tf":1.4142135623730951}},"df":3}}}}},"’":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}},"g":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":10},"o":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":2}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":2}}}}}},"n":{"docs":{},"df":0,"u":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":2.23606797749979},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":2},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951}},"df":1}}}}},"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}},"e":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":3}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":2.0},"https://naps62.com/posts/knowledge-base/":{"tf":2.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":2.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":9,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":2}}}},"x":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":3.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":5.0990195135927845},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":3,"=":{"docs":{},"df":0,"$":{"docs":{},"df":0,"1":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.7320508075688772}},"df":1}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":4,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/speaking/":{"tf":1.0}},"df":1}}}}}},"w":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":2}}},"w":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":2}}}}}},"u":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":2.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":3.1622776601683795}},"df":3}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.7320508075688772}},"df":1}}}}}}},"g":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/":{"tf":1.0},"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.8284271247461903},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":2.449489742783178},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":4.242640687119285},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":2.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":13,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"&":{"docs":{},"df":0,"n":{"docs":{},"df":0,"b":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}}}}}},"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":2.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":7}}},"l":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1,"i":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":2}}}}},"c":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.23606797749979},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":2,"/":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":2}},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}}}}},"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":2.23606797749979},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":2.8284271247461903},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.6457513110645907},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.7320508075688772}},"df":12,"(":{"docs":{},"df":0,":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"b":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951}},"df":1}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}}},"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.23606797749979}},"df":3}}}}}},"m":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":3},"p":{"docs":{"https://naps62.com/speaking/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951}},"df":1},"e":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.7320508075688772},"https://naps62.com/speaking/":{"tf":1.4142135623730951}},"df":6}},"s":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":2.23606797749979}},"df":8},"t":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":3}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":2}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":3}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":2.449489742783178},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":2}}}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":3,"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}}}}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":1},"g":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.449489742783178},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":8,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}}}}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"=":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.7320508075688772}},"df":10,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":2.23606797749979},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":4}}}}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":2,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":2}}}}}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":2}},"o":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1,"n":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}},"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":3.4641016151377544},"https://naps62.com/speaking/":{"tf":1.0}},"df":2,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.23606797749979}},"df":1,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"$":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"u":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}}}}},"c":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951}},"df":1,".":{"docs":{},"df":0,"y":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}}}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.6457513110645907},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":3.4641016151377544},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":3.4641016151377544}},"df":5}},"u":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1},"r":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":2}}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":3.4641016151377544}},"df":1,".":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.23606797749979}},"df":1}}}}}}}}}}}}}}}},"p":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":3}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951}},"df":1}},"s":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":4,"r":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951}},"df":1}}}}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.23606797749979},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":2.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":4.123105625617661},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":2.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":2.23606797749979},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":3.1622776601683795},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":2.6457513110645907},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.8284271247461903},"https://naps62.com/speaking/":{"tf":1.4142135623730951}},"df":15,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}},"/":{"docs":{},"df":0,"3":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":4}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.8284271247461903}},"df":1}}},"’":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}},"g":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/speaking/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}}}}}},"l":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{"https://naps62.com/speaking/":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951}},"df":1}}}},"m":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":3}}},"e":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/speaking/":{"tf":1.4142135623730951}},"df":13},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951}},"df":1}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":2.449489742783178},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":3.0}},"df":7}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":3.3166247903554},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.7320508075688772},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":3}},"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.7320508075688772}},"df":9,"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":3}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1},"y":{"docs":{},"df":0,"'":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}},"r":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":2}},"i":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.23606797749979}},"df":6,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":5},"x":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":4}},"i":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.7320508075688772}},"df":2},"s":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":3.4641016151377544},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"'":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1},".":{"docs":{},"df":0,"y":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}},"u":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/speaking/":{"tf":1.4142135623730951}},"df":3}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":5,"u":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}},"d":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.0}},"df":1}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":2},"g":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.7320508075688772},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":4,"/":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}}},"u":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/speaking/":{"tf":1.0}},"df":6}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.7320508075688772}},"df":1}}}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":1}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":2},"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951}},"df":1,"o":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":1}}}}}}},"u":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":3.3166247903554}},"df":2}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":3.872983346207417},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"=":{"docs":{},"df":0,"@":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}}},"q":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.4142135623730951}},"df":1}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":2.449489742783178},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":3.1622776601683795},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":4,"'":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1},".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":2.0}},"df":1}}}}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":2.0}},"df":1}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":2.0}},"df":1}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":3.0}},"df":1,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":2.449489742783178}},"df":1}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":2.0}},"df":1}}}}}}}},"x":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":7}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":3}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/speaking/":{"tf":2.449489742783178}},"df":2}}},"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.7320508075688772},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":2}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":3},"t":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":4}},"r":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":2},"t":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":5,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":2}},"r":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":3},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":4,"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":5}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}}}},"p":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.23606797749979}},"df":5}},"r":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":2}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":3}}},"w":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"y":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951}},"df":1}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.7320508075688772}},"df":1}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"z":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.6457513110645907},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.7320508075688772},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.23606797749979},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.23606797749979},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":2.6457513110645907},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":3.4641016151377544},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":2.0}},"df":15,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951}},"df":2}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}}},"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"https://naps62.com/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":2}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951}},"df":1,"+":{"docs":{},"df":0,"0":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951}},"df":1},"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/":{"tf":1.4142135623730951},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":2.6457513110645907},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":2.6457513110645907},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":8,"=":{"docs":{},"df":0,"$":{"docs":{},"df":0,"(":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951}},"df":1}}}}}},"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.4142135623730951}},"df":2}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":2}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.23606797749979},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":2.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":6,"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951}},"df":1,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"z":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}}}},"y":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}},"d":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772}},"df":2,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":2}}}},"t":{"docs":{},"df":0,"a":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":2.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":3.4641016151377544}},"df":6,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":3.872983346207417},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.6457513110645907},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":5,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.0}},"df":1}}}}}}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}}}},"y":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":6}},"b":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772}},"df":1},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":5}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772}},"df":1}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":3},"s":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":1}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}}}}}}}}}}},"f":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":2.6457513110645907},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":3.605551275463989},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":2.449489742783178}},"df":7,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":6,"_":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.449489742783178}},"df":1}}}}}}}}},"i":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":1,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":2.23606797749979}},"df":1}}},"n":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":3.7416573867739413},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":2.449489742783178},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.7320508075688772},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.7320508075688772}},"df":9,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":2.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.23606797749979},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":2.0}},"df":4}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951}},"df":1}}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.23606797749979},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.449489742783178},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.7320508075688772}},"df":7}}}}},"p":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":2,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.7320508075688772}},"df":1}}}}}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":4},"t":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":2.23606797749979}},"df":1,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"1":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":2.6457513110645907}},"df":1}}},"o":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.6457513110645907}},"df":2,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}}}}},"p":{"docs":{},"df":0,"o":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}},"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}}}},"p":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.449489742783178}},"df":5,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"y":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":4.123105625617661},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.23606797749979},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":3.4641016151377544}},"df":3,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/speaking/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":3},"p":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":2}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":2}},"k":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"https://naps62.com/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":2}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":2.8284271247461903}},"df":1},"y":{"docs":{},"df":0,"=":{"docs":{},"df":0,"$":{"docs":{},"df":0,"{":{"docs":{},"df":0,"1":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951}},"df":1},"2":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}}}}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":4}}}},"v":{"docs":{},"df":0,"/":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"https://naps62.com/":{"tf":1.7320508075688772},"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.449489742783178},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/speaking/":{"tf":1.7320508075688772}},"df":12}}},"x":{"docs":{"https://naps62.com/speaking/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"p":{"docs":{"https://naps62.com/speaking/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"y":{"docs":{},"df":0,"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":3}},"’":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.6457513110645907},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":2.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":3.3166247903554},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.23606797749979},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.7320508075688772},"https://naps62.com/speaking/":{"tf":1.4142135623730951}},"df":14}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":2,"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":2}}}}}}}},"g":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.449489742783178}},"df":2,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"=":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"m":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951}},"df":1}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":4,"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772}},"df":4}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":3}}}}}}},"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":2.6457513110645907},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":4}},"d":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}}}}}},"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.4142135623730951}},"df":4}}}},"h":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1},"k":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1},"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.8284271247461903}},"df":2},"y":{"docs":{},"df":0,"'":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.7320508075688772}},"df":1}}},"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}}}}}}},"v":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":4}}},"o":{"docs":{"https://naps62.com/":{"tf":1.0},"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":6,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951}},"df":1}}}}}},"c":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.7320508075688772}},"df":3,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":7.0710678118654755}},"df":2,"'":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1},".":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}},"_":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":1}}}}}},"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":2}}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":4}},"’":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":5}}}}},"m":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":2}}}},"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/speaking/":{"tf":1.0}},"df":7}},"e":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":12},"’":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.0}},"df":5}}},"s":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":2}}}},"w":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":4}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}},"w":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1,"r":{"docs":{},"df":0,"=":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.8284271247461903}},"df":1}}}}}},"u":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":3},"l":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":2.0}},"df":4}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951}},"df":1}},"e":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":1}}},"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.23606797749979}},"df":3}}}}},"e":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":1,".":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":4}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":2.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.23606797749979},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":2.23606797749979},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.6457513110645907},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":2.23606797749979},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":2.0}},"df":12}},"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951}},"df":1,"i":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.7320508075688772},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":7,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":3}},"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":7}}}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772}},"df":2}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":3}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"o":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.23606797749979},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.7320508075688772}},"df":2,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}}}},"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"df":0,"/":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"b":{"docs":{},"df":0,":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"@":{"docs":{},"df":0,"d":{"docs":{},"df":0,"b":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"’":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":7,"o":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":7,"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"/":{"docs":{},"df":0,"o":{"docs":{"https://naps62.com/speaking/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":2}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":4}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":2}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":3.7416573867739413}},"df":1}}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":3.0}},"df":1,"'":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":3.3166247903554},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":4.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":2.449489742783178},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.6457513110645907},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":3.1622776601683795},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":3.7416573867739413},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":7,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"/":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}},"’":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.7320508075688772}},"df":2}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.0}},"df":1,"i":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}}}}}},"m":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"y":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.4142135623730951}},"df":2},"y":{"docs":{},"df":0,"(":{"docs":{},"df":0,"'":{"docs":{},"df":0,"b":{"docs":{},"df":0,":":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":2.23606797749979},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"/":{"docs":{},"df":0,"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}}}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772}},"df":1}}}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}}}}}},"d":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":4.898979485566356},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":2.0},"https://naps62.com/posts/knowledge-base/":{"tf":2.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":5.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.449489742783178},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":3.3166247903554},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":3.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.7320508075688772},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":3.605551275463989},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":3.872983346207417},"https://naps62.com/speaking/":{"tf":1.0}},"df":17,"=":{"docs":{},"df":0,"+":{"docs":{},"df":0,"^":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"s":{"docs":{},"df":0,"*":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"z":{"docs":{},"df":0,"1":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":2.23606797749979}},"df":1}}}}}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.4142135623730951}},"df":2}}}}},"i":{"docs":{},"df":0,"f":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":2.0}},"df":3}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.8284271247461903},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":2,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951}},"df":1}}}}},"/":{"docs":{},"df":0,"2":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951}},"df":1}}}}},"—":{"docs":{},"df":0,"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}}}}}}}}}},"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":1}}}}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":1}}}},"j":{"docs":{},"df":0,"o":{"docs":{},"df":0,"y":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":4}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":7}}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.449489742783178},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772}},"df":4}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":6}},"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":2}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"?":{"docs":{},"df":0,"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"v":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":1,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.8284271247461903},"https://naps62.com/speaking/":{"tf":1.0}},"df":8}}}}}},"q":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":4}}}}}},"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1,"/":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":2.23606797749979},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":2.6457513110645907}},"df":3}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":5}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":3}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":3,"/":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"x":{"docs":{},"df":0,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.7320508075688772}},"df":1}}}}},"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/speaking/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.7320508075688772}},"df":1,".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"(":{"docs":{},"df":0,"1":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"_":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"_":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"_":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"2":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":2,"u":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":2}}},"e":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.7320508075688772},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.7320508075688772}},"df":14,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.7320508075688772},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":5,"u":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":3}},"t":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":8}},"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}},"m":{"docs":{"https://naps62.com/speaking/":{"tf":1.0}},"df":1},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}},"v":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951}},"df":2}}}},"x":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":3}}}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.7320508075688772},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.6457513110645907},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":2.0}},"df":11}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.23606797749979},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772}},"df":6,"o":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}}}},"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772}},"df":1}}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.6457513110645907},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":2.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":9}},"t":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":2,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":1}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":2.0}},"df":2}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.7320508075688772}},"df":4}},"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/speaking/":{"tf":1.4142135623730951}},"df":5}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":7}},"n":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772}},"df":1}},"s":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}},"r":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":2}}}}},"r":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1},"s":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":2}}},"r":{"docs":{},"df":0,"a":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951}},"df":3,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":2}}},"e":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":3}}}}}},"f":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":4,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1},"t":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":2,"o":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.7320508075688772},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":2.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":5,"u":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":2}}},"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951}},"df":1,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}},"s":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.449489742783178},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":3}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":2}}}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":3},"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":1}}}},"t":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":3}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951}},"df":1},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.8284271247461903},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":3.1622776601683795}},"df":11}}}},"e":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":2}}}},"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}},"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":6}},"l":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":2}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":2.0}},"df":3,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}}}}}}}}},"w":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":2.0},"https://naps62.com/posts/knowledge-base/":{"tf":2.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951},"https://naps62.com/speaking/":{"tf":1.0}},"df":14}},"f":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951}},"df":1},"i":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951}},"df":1}}},"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":2}}},"l":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":2.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":2.6457513110645907},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":4.58257569495584},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":2.6457513110645907},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":3.872983346207417},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.23606797749979},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.7320508075688772}},"df":12,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":2}}}}}}},"l":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.7320508075688772},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":5,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.7320508075688772},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":7,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}},"e":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":2},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.7320508075688772},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.7320508075688772},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.0}},"df":11}}},"t":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.7320508075688772},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951},"https://naps62.com/speaking/":{"tf":1.0}},"df":6},"x":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":4}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":4.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.23606797749979}},"df":2,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.0}},"df":2}}}}},"t":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951}},"df":1}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/speaking/":{"tf":1.0}},"df":1}}}},"w":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":3}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":3.3166247903554},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":2.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":3,"s":{"docs":{"https://naps62.com/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":4}}},"l":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772}},"df":6}}}},"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":2.23606797749979}},"df":1}},"o":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":3.1622776601683795},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":3,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,":":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"4":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"1":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1},"2":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1},"3":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1},"4":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":3},"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772}},"df":2,".":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}},"k":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1},"m":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":3,"a":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":3}},"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":2}}},"t":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":2},"u":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":2}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.6457513110645907},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772}},"df":4}}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":4,"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/speaking/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"’":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":2}}}}}}},"e":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":2.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":6}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":2}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.7320508075688772}},"df":2}}}}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}},"l":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.7320508075688772},"https://naps62.com/posts/knowledge-base/":{"tf":1.7320508075688772},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":8,"i":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":2}}},"n":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}}}}}}}},"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.449489742783178},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.7320508075688772},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":2.449489742783178},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":2.23606797749979},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":3.1622776601683795},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":10}}}}},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951}},"df":1,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}}}}}}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":8}}}}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":5}}},"z":{"docs":{},"df":0,"z":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951}},"df":1}}}},"z":{"docs":{},"df":0,"f":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.7320508075688772}},"df":1}}},"g":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951}},"df":1,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":2.0}},"df":1}}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951}},"df":3}},"n":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.0}},"df":1},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.7320508075688772},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":5}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"(":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{},"df":0,"(":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":3.7416573867739413}},"df":1,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"2":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"2":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"’":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}},"t":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":8,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}}}}}}},"/":{"docs":{},"df":0,"1":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":1}},"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"(":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1}}}}},"h":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":2}},"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":5.385164807134504},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951}},"df":3,"h":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":4.358898943540674},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.4142135623730951}},"df":6,"'":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1},".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"y":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":3,"n":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.7320508075688772}},"df":7}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951}},"df":1}}}}},"o":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":2.23606797749979},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.7320508075688772},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.7320508075688772},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.449489742783178},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":15,"a":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":3}},"e":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":5},"n":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":2}},"o":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.7320508075688772},"https://naps62.com/speaking/":{"tf":1.0}},"df":7,"b":{"docs":{},"df":0,"y":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951}},"df":1}}},"g":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":2}}},"y":{"docs":{},"df":0,"o":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.7320508075688772}},"df":1}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":2},"c":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.7320508075688772}},"df":1}}}}}}},"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.7320508075688772}},"df":7}},"e":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":1,"(":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":1}}}},"/":{"docs":{},"df":0,"0":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1},"1":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":1}}}}},"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}},"p":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}},"w":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":2}}},"t":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":3.4641016151377544},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":2.449489742783178},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.449489742783178},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":3.605551275463989}},"df":5},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":4}}},"z":{"docs":{},"df":0,"z":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":3,"i":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":2},"l":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":5,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"(":{"docs":{},"df":0,"{":{"docs":{},"df":0,":":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}}}},"/":{"docs":{},"df":0,"3":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}}},"/":{"docs":{},"df":0,"2":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}}}},"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.7320508075688772},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":8}},"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":5,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}},"m":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"’":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":2}}},"t":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951}},"df":1}},"v":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":12,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":2}},"’":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":4}}},"r":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1,"d":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}},"t":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"'":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":3.4641016151377544},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":3,"1":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1},"2":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1},"3":{"docs":{},"df":0,"]":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}}}}}},"p":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":5,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":2}},"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.7320508075688772},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.449489742783178},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":13,"'":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":2.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.7320508075688772},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":7},")":{"docs":{},"df":0,"]":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"/":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":3.7416573867739413}},"df":1,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}}},"q":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.4142135623730951}},"df":1}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"x":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}}},"y":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":1}},"i":{"docs":{"https://naps62.com/":{"tf":1.0}},"df":1,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}},"e":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":2.23606797749979}},"df":1}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}}}}},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":2}},"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.7320508075688772},"https://naps62.com/posts/knowledge-base/":{"tf":1.7320508075688772},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":2.23606797749979}},"df":3}}}}}}},"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":2}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":2}}}}},"t":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}}},"c":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1},"l":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":2},"e":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":2},"l":{"docs":{},"df":0,"y":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1},"k":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":4}},"p":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":2}}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.6457513110645907}},"df":3}},"u":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.7320508075688772},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":2,":":{"docs":{},"df":0,"/":{"docs":{},"df":0,"/":{"docs":{},"df":0,"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"/":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"w":{"docs":{},"df":0,"w":{"docs":{},"df":0,"w":{"docs":{},"df":0,".":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772}},"df":2},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}},"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"'":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.7320508075688772},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":2.23606797749979},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.0}},"df":7}},"m":{"docs":{"https://naps62.com/":{"tf":1.4142135623730951},"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":2.8284271247461903},"https://naps62.com/posts/knowledge-base/":{"tf":3.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/speaking/":{"tf":1.4142135623730951}},"df":7},"v":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":2.0}},"df":3}},".":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":2},"d":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"a":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":5,"l":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":3}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":3.605551275463989}},"df":1}}}},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"x":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":2.449489742783178},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.7320508075688772}},"df":3}}},"(":{"docs":{},"df":0,"1":{"docs":{},"df":0,")":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}},"2":{"docs":{},"df":0,")":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}}}},"f":{"docs":{},"df":0,"/":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.7320508075688772}},"df":3,"i":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":3}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":3.3166247903554}},"df":3,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":2}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":4.242640687119285},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":3.3166247903554}},"df":4}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":3}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"v":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.7320508075688772},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":5}}}}},"n":{"docs":{},"df":0,"/":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}}}},"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.7320508075688772},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":8}}},"o":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.7320508075688772},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}}}}}}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.4142135623730951}},"df":2}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}}},"x":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":3}},"i":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":2}}}}}},"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/speaking/":{"tf":1.0}},"df":1}}}}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951}},"df":1}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":2.23606797749979},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1,".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"(":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}}}}}}}},"’":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}},"g":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.7320508075688772}},"df":1}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"_":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":2},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}}},"i":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.23606797749979},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":3}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":2}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":2.6457513110645907},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":5}}},"i":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":3}},"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951}},"df":1}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.6457513110645907},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.449489742783178}},"df":2},"n":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.23606797749979},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":9}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.449489742783178},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":12}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"(":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":5}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":5}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":3}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":4}}},"n":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":2},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.7320508075688772}},"df":1}}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":5,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":2}}}}}},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":2}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":2},"l":{"docs":{},"df":0,"v":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":3}}}}},"o":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}},"p":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":3}}},"o":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":2}},"s":{"docs":{},"df":0,"u":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":7}}},"t":{"docs":{},"df":0,"'":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.6457513110645907},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.7320508075688772},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":2.0},"https://naps62.com/posts/knowledge-base/":{"tf":2.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.7320508075688772},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":2.23606797749979},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":10,"l":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/speaking/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":3.3166247903554}},"df":2},"r":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":6}}}},"’":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":6}},"’":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":3}},"m":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":2},"v":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":2}}},"j":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951}},"df":1,"a":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"o":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":3.605551275463989},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":4},"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"https://naps62.com/speaking/":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":2,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/speaking/":{"tf":1.4142135623730951}},"df":1}},"m":{"docs":{},"df":0,"p":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}},"z":{"docs":{},"df":0,"z":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}}},"k":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951}},"df":1,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":10}},"p":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951}},"df":1}}}},"y":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":2.23606797749979},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":5,"0":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1},"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}}}}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}}}}},"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951}},"df":1}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":2}}}}},"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":4}}}}}},"i":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":11,"l":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951}},"df":1}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":9,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":4.242640687119285},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":2}}}},"n":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/speaking/":{"tf":1.0}},"df":2}}}},"z":{"docs":{},"df":0,"z":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":3}},"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.23606797749979},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":3.0}},"df":7,"e":{"docs":{},"df":0,"’":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951}},"df":1}}}}}}},"r":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":7}},"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":5}},"t":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1,"r":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":8},"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":3}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":3}}}},"x":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1},"y":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":3}}},"z":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.7320508075688772},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":7,"t":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1}}},"v":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":3}},"d":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1},"f":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":5}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/speaking/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"(":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}}}}}},"s":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":3}},"t":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.7320508075688772}},"df":2,"'":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":2.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/speaking/":{"tf":1.7320508075688772}},"df":9},"’":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.23606797749979},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":2.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":2.0}},"df":6}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":5},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,":":{"docs":{},"df":0,"5":{"docs":{},"df":0,"9":{"docs":{},"df":0,"0":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}}}}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":5}}}}},"f":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":2,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":1}},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/":{"tf":1.0}},"df":1}}}}}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951}},"df":1}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":3}}},"n":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":2.8284271247461903},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":8,"a":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951}},"df":1}}},"k":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":2},"u":{"docs":{},"df":0,"x":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":4}}},"s":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/speaking/":{"tf":1.4142135623730951}},"df":1}}},"t":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":5,"e":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":5}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":2}},"t":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951}},"df":2}}},"v":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":5}}},"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.7320508075688772},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":4}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":2.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.0}},"df":5,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}},"g":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.7320508075688772}},"df":2},"n":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":8,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":3.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.7320508075688772},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.23606797749979},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":15},"p":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.4142135623730951},"https://naps62.com/speaking/":{"tf":1.0}},"df":2}},"s":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":2}},"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/speaking/":{"tf":1.4142135623730951}},"df":10},"v":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":2,"\\":{"docs":{},"df":0,"n":{"docs":{},"df":0,"y":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}}}},"w":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":3}},"t":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.0}},"df":1,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.23606797749979},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":2}},"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}}}}}}}}}}},"c":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"a":{"docs":{},"df":0,"a":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":1},"v":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":1}}}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}}}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}}}}}}}},"v":{"docs":{},"df":0,"h":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}}}}},"m":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":3.7416573867739413}},"df":4}}},"r":{"docs":{},"df":0,"o":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":3.3166247903554}},"df":1}}},"d":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":5}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":8}}},"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.7320508075688772}},"df":7,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951}},"df":1}}},"e":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}},"j":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}},"k":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":2.23606797749979},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.6457513110645907},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/speaking/":{"tf":1.4142135623730951}},"df":13}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":7}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":4},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":2}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":4}}},"’":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}},"p":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":2.23606797749979}},"df":3,".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"@":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/speaking/":{"tf":1.0}},"df":1,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.7320508075688772},"https://naps62.com/posts/knowledge-base/":{"tf":2.0}},"df":2}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":3.3166247903554},"https://naps62.com/speaking/":{"tf":1.0}},"df":3}}}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.23606797749979},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.7320508075688772},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":8,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"=":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":2.23606797749979}},"df":1}}}}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":2}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":2}}}},"x":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":1}}}}}}},"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}},"y":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":4}}},"d":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/knowledge-base/":{"tf":1.7320508075688772},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":7,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}},"t":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1},"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}}}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":2}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":2}}}},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":6}}}}},"r":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1},"g":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":3.7416573867739413}},"df":1}},"s":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":3,"a":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":2}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}}},"l":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1},"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.6457513110645907}},"df":1}}}}}}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":3.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.7320508075688772},"https://naps62.com/speaking/":{"tf":1.0}},"df":8,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"(":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}}}}}}}},"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":3.3166247903554},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":3.605551275463989}},"df":5,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"&":{"docs":{},"df":0,"n":{"docs":{},"df":0,"b":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/":{"tf":1.0},"https://naps62.com/posts/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.8284271247461903}},"df":4}}}},"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":4},"e":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":2}}}}},"s":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":4},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":1}}}},"x":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":3.0}},"df":3,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}},"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.23606797749979}},"df":1}}}}},"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.7320508075688772}},"df":1,"e":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":2.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":4,"l":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.23606797749979},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.6457513110645907},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":8}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"https://naps62.com/speaking/":{"tf":1.4142135623730951}},"df":1}},"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":1}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951}},"df":1}}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":4}}},"r":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":2.8284271247461903},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.6457513110645907},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":2.23606797749979},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.7320508075688772},"https://naps62.com/speaking/":{"tf":1.4142135623730951}},"df":16}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":5}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":5,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":2}}}}}}},"s":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951}},"df":1}},"t":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.23606797749979},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":12}},"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":2}}},"p":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.7320508075688772}},"df":8}}}}}},"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,".":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951}},"df":1}}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}}}}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951}},"df":1}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}}}},"j":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":1}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":1}}}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,".":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,".":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"(":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.0}},"df":1}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"(":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}}}}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951}},"df":2}}}}}},"n":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":2.0}},"df":1,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":2}},"m":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.449489742783178},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.7320508075688772},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":3.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":2.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.7320508075688772},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.0}},"df":12,"/":{"docs":{},"df":0,"0":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,"6":{"docs":{},"df":0,"2":{"docs":{"https://naps62.com/":{"tf":1.0},"https://naps62.com/posts/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.8284271247461903},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":4,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,":":{"docs":{},"df":0,"$":{"docs":{},"df":0,"{":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}},"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":2.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":3}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.0}},"df":5,"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":3}}}}}}}}},"e":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":3.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.449489742783178},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.6457513110645907},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.449489742783178},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":4.795831523312719},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.449489742783178},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":2.6457513110645907},"https://naps62.com/speaking/":{"tf":1.0}},"df":15}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":2}}},"w":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.8284271247461903},"https://naps62.com/posts/knowledge-base/":{"tf":2.23606797749979},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.7320508075688772},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.6457513110645907},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.7320508075688772}},"df":13,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951}},"df":1}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":3,"n":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}}}}}},"x":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":6,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":1,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"(":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"x":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.6457513110645907}},"df":2}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":5},"k":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}},"l":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":3}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.7320508075688772}},"df":1}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}}}}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,"1":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}},"n":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.4142135623730951}},"df":2,"e":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951}},"df":1,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":1}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":5}}}},"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}},"e":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":4.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":8},"h":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":3},"i":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":8},"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":2.0}},"df":1}}}},"w":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.7320508075688772},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":2.449489742783178},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":3.605551275463989},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.0}},"df":14}},"p":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772}},"df":1}},"u":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951}},"df":1}},"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":2.0}},"df":3}}}}}},"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/speaking/":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":2}}}}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.449489742783178}},"df":1}}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":2}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":4}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1}}}}},"k":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":3.1622776601683795}},"df":6},"l":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":1,"d":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":3}},"n":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.449489742783178},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":2.23606797749979},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.23606797749979},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":2.449489742783178},"https://naps62.com/posts/knowledge-base/":{"tf":2.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.8284271247461903},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":2.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.8284271247461903},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.7320508075688772},"https://naps62.com/speaking/":{"tf":1.0}},"df":15,"c":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.7320508075688772}},"df":5},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":6},"r":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.23606797749979},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.7320508075688772},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":5}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":3}}}}},"t":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.0}},"df":2,"i":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":2},"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.449489742783178},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":5}}}}},"r":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.23606797749979}},"df":1,"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":4.123105625617661}},"df":1,".":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/speaking/":{"tf":1.0}},"df":3}}},"g":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951}},"df":1}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":2}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":9}}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/speaking/":{"tf":1.0}},"df":2}}},"p":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"o":{"docs":{"https://naps62.com/speaking/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":2}}}}},"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.449489742783178},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.7320508075688772},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.7320508075688772},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.23606797749979},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":14,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.4142135623730951}},"df":3}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":2}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.4142135623730951}},"df":6,"a":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951}},"df":2}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":3}}}},"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":2,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951}},"df":1}}}}}},"p":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951}},"df":1,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":6}}}},"g":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":3}},"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":1},"r":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.7320508075688772}},"df":1}},"l":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{"https://naps62.com/posts/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.8284271247461903}},"df":2}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951}},"df":1}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/speaking/":{"tf":1.0}},"df":1}}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}}}},"m":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.7320508075688772}},"df":1,"e":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":2}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951}},"df":1}}},"s":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}},"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":2.449489742783178},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":2.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":3.3166247903554},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":13,"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":3,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.7320508075688772},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":5,"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":3}}}}}}}}}},"s":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":4}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}},"h":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":2.23606797749979},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":7},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.6457513110645907}},"df":4}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.8284271247461903}},"df":1},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}},"r":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":4}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":2.0}},"df":5}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/speaking/":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}},"l":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":3}}},"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":2.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":3}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":3.4641016151377544},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772}},"df":2,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"x":{"docs":{},"df":0,".":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}}},"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"'":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1},"c":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":3}},"d":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,"6":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}},"2":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.7320508075688772}},"df":3}},"n":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":2.23606797749979}},"df":2}}}}},"x":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/speaking/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":3,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":2}}}}}},"n":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":3}}}}},"y":{"docs":{"https://naps62.com/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951}},"df":4}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}}}}}},"o":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}}},"j":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951}},"df":1}},"—":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.7320508075688772},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.7320508075688772}},"df":8}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":2}}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":1}}}}},"r":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":2}}}}},"r":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.23606797749979},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.6457513110645907}},"df":2,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.449489742783178}},"df":1}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":6}}}},"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":2.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.6457513110645907},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":2.23606797749979},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.7320508075688772}},"df":16,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}}}}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"9":{"docs":{},"df":0,".":{"docs":{},"df":0,"6":{"docs":{},"df":0,".":{"docs":{},"df":0,"2":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}},"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}},"q":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.7320508075688772}},"df":2}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":2}}}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}},"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.449489742783178},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":2.23606797749979},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":9}}}},"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":8}}}}},"e":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":3,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":2}},"i":{"docs":{},"df":0,"x":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951}},"df":1,"o":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.7320508075688772}},"df":1}}}}}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"v":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":2}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":2}}}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":2.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":8}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":4}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.0}},"df":1}},"o":{"docs":{},"df":0,"u":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":5,"s":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":2}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":2}}}},"t":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.0}},"df":1,"f":{"docs":{},"df":0,"(":{"docs":{},"df":0,"m":{"docs":{},"df":0,"s":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}},"v":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":2}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":2}}}},"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":6}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.7320508075688772}},"df":8}}}},"c":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1,"s":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":3.4641016151377544}},"df":8}}}},"d":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1,"u":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":3.7416573867739413}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}}}}},"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.23606797749979}},"df":5}}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.449489742783178},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":5,"a":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}},"m":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":2}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}}},"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":3.1622776601683795},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":2.23606797749979},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.449489742783178},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":10,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":2.23606797749979},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.4142135623730951}},"df":3,"#":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"w":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"(":{"docs":{},"df":0,"'":{"docs":{},"df":0,"s":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":1}}}}}}}}},"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"j":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":2}}}}}}}}}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"f":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":2}},"t":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951}},"df":2}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":3.4641016151377544}},"df":1,".":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":2,"n":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":2.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.449489742783178},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":9}}},"x":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.8284271247461903},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772}},"df":2},"y":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.7320508075688772}},"df":1}}}}}}}}},"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"x":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.0}},"df":1}}}}}}}}}}}}},"s":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":4},"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/":{"tf":1.0},"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":6},"s":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":3}}}}},"l":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.449489742783178},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":2.23606797749979}},"df":2,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}}}}}}}},"n":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.23606797749979},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.7320508075688772},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":4,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"3":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.8284271247461903},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":4,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}}}}}}},"/":{"docs":{},"df":0,"1":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":1}}}},"y":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{"https://naps62.com/speaking/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.7320508075688772}},"df":1}}}}}},"q":{"docs":{},"df":0,"a":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951}},"df":1},"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.7320508075688772}},"df":3}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":2}}}}},"u":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.7320508075688772}},"df":2}}}},"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":2}},"o":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.7320508075688772},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.8284271247461903},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.7320508075688772}},"df":3}}}},"r":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"=":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,"#":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"u":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":3.605551275463989}},"df":1}}},"i":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951}},"df":3},"s":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}},"n":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}}}}},"g":{"docs":{"https://naps62.com/speaking/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}}}}},"b":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}},"e":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":3},"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772}},"df":1,".":{"docs":{},"df":0,"j":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":1}}}},"d":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.7320508075688772},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":3.1622776601683795},"https://naps62.com/speaking/":{"tf":1.0}},"df":7,"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":4},"m":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}},"l":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.7320508075688772},"https://naps62.com/speaking/":{"tf":1.4142135623730951}},"df":7,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.7320508075688772},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":9}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":3}}}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":3.1622776601683795}},"df":1}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":3.0}},"df":2}},"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":3}}},"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":2}}}}},"r":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951}},"df":1}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"d":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":2,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":2}}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}},"f":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":2}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"2":{"docs":{},"df":0,"4":{"docs":{},"df":0,"8":{"docs":{},"df":0,"6":{"docs":{},"df":0,"7":{"docs":{},"df":0,"9":{"docs":{},"df":0,"3":{"docs":{},"df":0,"6":{"docs":{},"df":0,"7":{"docs":{},"df":0,"5":{"docs":{},"df":0,".":{"docs":{},"df":0,"5":{"docs":{},"df":0,"7":{"docs":{},"df":0,"9":{"docs":{},"df":0,"3":{"docs":{},"df":0,"3":{"docs":{},"df":0,"8":{"docs":{},"df":0,"2":{"docs":{},"df":0,"4":{"docs":{},"df":0,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"6":{"docs":{},"df":0,"2":{"docs":{},"df":0,"7":{"docs":{},"df":0,"7":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"x":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":2}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":2.23606797749979}},"df":1}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":3}}}}},"l":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":2}}}}}}}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":5,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.8284271247461903},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":4.69041575982343},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":5,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":2}},"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"v":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":1}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":5}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.449489742783178}},"df":2,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}},"v":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":3}}},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":2}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":3}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":1}}},"o":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":4,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":3}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":2}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1}}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":3.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":2.23606797749979},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":4.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":2.8284271247461903}},"df":5}}},"i":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":7}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":2}}}},"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":2,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}},"v":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":4}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":2},"s":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":3}}}},"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":5},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.23606797749979},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":2.23606797749979}},"df":5}},"m":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":2}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":2.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":2}}}},"u":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951}},"df":1,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.23606797749979},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":2}}}}},"v":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772}},"df":3},"t":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.0}},"df":1}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/speaking/":{"tf":1.0}},"df":1}}}}}}}}}}},"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}}}}},"g":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":7}}},"p":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":2.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.6457513110645907},"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":2},"l":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":2}},"o":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1},"t":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1,"@":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":3.7416573867739413}},"df":1,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"4":{"docs":{},"df":0,"5":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}}},"9":{"docs":{},"df":0,"0":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}},"x":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"4":{"docs":{},"df":0,"5":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}}}}},"y":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"6":{"docs":{},"df":0,"0":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.0}},"df":1}}}}}}},"z":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951}},"df":1,"(":{"docs":{},"df":0,"0":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.23606797749979}},"df":1}}}},"3":{"docs":{},"df":0,"6":{"docs":{},"df":0,"0":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951}},"df":1}}}}}},"4":{"docs":{},"df":0,"5":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}},"t":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":3.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":2}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":2}}}},"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":3.605551275463989},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.7320508075688772},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":2.23606797749979},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":2.23606797749979},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.7320508075688772}},"df":8},"y":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":6}},"n":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":3.1622776601683795},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":4.123105625617661},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":6.164414002968976},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":10,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":2}}}}},"|":{"docs":{},"df":0,"\\":{"docs":{},"df":0,".":{"docs":{},"df":0,"?":{"docs":{},"df":0,"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}},"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":2.0}},"df":1}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"'":{"docs":{},"df":0,"s":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951}},"df":1,"t":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":14},"p":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":3}}},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}},"v":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":4}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}},"e":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":3,"(":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"5":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{"https://naps62.com/speaking/":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":5}}}},"e":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":2}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951}},"df":1,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":2.8284271247461903},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.23606797749979},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772}},"df":7}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951}},"df":1,"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"=":{"docs":{},"df":0,"2":{"docs":{},"df":0,"0":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}}}}}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":3.1622776601683795},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":3}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":10}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772}},"df":1}}}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":2}}}},"u":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}},"e":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/knowledge-base/":{"tf":2.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":3.1622776601683795},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.7320508075688772},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":11,"d":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":4.358898943540674}},"df":1},"m":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":4},"n":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":3}},"l":{"docs":{},"df":0,"f":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":4},"s":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.7320508075688772}},"df":3},"t":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.7320508075688772}},"df":1}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.7320508075688772},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":3}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":4,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}},"v":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":3.1622776601683795},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":3.7416573867739413},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":3,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":1}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.449489742783178},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772}},"df":3}}}},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":3.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":2.6457513110645907},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.23606797749979},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":3.605551275463989},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":11,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}}}}}},"/":{"docs":{},"df":0,"2":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"p":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":7}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":6}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.7320508075688772},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":2}},"v":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.7320508075688772},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":3}}},"i":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":7,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772}},"df":1}},"u":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.4142135623730951}},"df":3}}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":4}}}}}},"w":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":5,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":2}}},"n":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":2,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}}}}},"g":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951}},"df":1}},"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":2.0}},"df":2}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.4142135623730951}},"df":8}}}},"p":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":12,"i":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":4}}},"u":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":2}}},"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.7320508075688772},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.7320508075688772}},"df":9}}},"s":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}},"t":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}},"z":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":2.23606797749979},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":3,"=":{"docs":{},"df":0,"5":{"docs":{},"df":0,"1":{"docs":{},"df":0,"2":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}}}},"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"#":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":2.23606797749979}},"df":1}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":2.6457513110645907}},"df":1}}}}},"w":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951}},"df":1,"(":{"docs":{},"df":0,"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}}}}}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1}},"p":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":2}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":2}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":6}},"r":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":2.449489742783178}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"’":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951}},"df":1,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":3.4641016151377544},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":2.8284271247461903}},"df":3,"'":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":2}}}}},"l":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1},"u":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.7320508075688772},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.23606797749979},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":8}},"v":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":6}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951}},"df":2}},"t":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.7320508075688772}},"df":9,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}},"’":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":3}}},"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":4}}}}}},"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":2}},"t":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/knowledge-base/":{"tf":3.3166247903554},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":2.23606797749979}},"df":4}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":2}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":2}},"c":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":2.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.7320508075688772}},"df":3,"/":{"docs":{},"df":0,"*":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":2}}}}}}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"{":{"docs":{},"df":0,"}":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":2}}}}}}}}}}},"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":2}},"f":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":8,"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":7,"c":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":3}},"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1},"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":2}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951}},"df":1}}}},"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":3}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}},"q":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":2.0}},"df":1,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":3.0}},"df":1},"s":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.4142135623730951}},"df":1}}}}}}},"s":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.0}},"df":2,"'":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}}},"l":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":3}},"g":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":4}},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/speaking/":{"tf":1.0}},"df":4}}}}},"r":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.449489742783178},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.7320508075688772},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.8284271247461903},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":2.449489742783178}},"df":12,"=":{"docs":{},"df":0,"+":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":2.23606797749979}},"df":1}}}}}}}}},"_":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{},"df":0,"(":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":6,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":2}}}}},"i":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.23606797749979}},"df":2}},"u":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":3,"s":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"p":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.7320508075688772},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.6457513110645907},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":9}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":2}},"l":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.7320508075688772},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.7320508075688772},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.4142135623730951}},"df":13}},"r":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":2}},"e":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":3},"i":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":2}}}}}}}}}}},"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.23606797749979},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.7320508075688772},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":4,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}},"p":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":3,"_":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}}}}}}}}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1,"u":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951}},"df":4}}}}}},"u":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}},"f":{"docs":{},"df":0,"f":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":2.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":4}}},"y":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.23606797749979}},"df":2}}}},"u":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951}},"df":1}}}}}}},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":4.0}},"df":1}}}}}},"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":2}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":2}}}},"e":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":2}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{"https://naps62.com/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.8284271247461903}},"df":2}}}}},"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"h":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":9},"k":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":3}},"d":{"docs":{},"df":0,"o":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951}},"df":3}}}}},"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":3}},"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":3,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":2.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":5}},"s":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":2}}}},"r":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":3},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}}}},"v":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":4}}}}},"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951}},"df":1}},"x":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":4.58257569495584},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":7,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,".":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}}}}},"q":{"docs":{},"df":0,"l":{"docs":{},"df":0,".":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/knowledge-base/":{"tf":1.7320508075688772},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.23606797749979},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":2.449489742783178}},"df":7,".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":1,"l":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":3}},"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}},"g":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":2.6457513110645907},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772}},"df":3},"k":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":2.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.7320508075688772},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.23606797749979},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":12,"n":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":2}}},"l":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":2.0}},"df":8}},"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.7320508075688772}},"df":3}}}},"s":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.23606797749979},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":7}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772}},"df":2}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":2}}}}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":3}},"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":2.449489742783178},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.0}},"df":4}}}},"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.7320508075688772}},"df":1,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{},"df":0,"{":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}}}}}}}},"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.449489742783178},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.6457513110645907},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.6457513110645907}},"df":8,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,":":{"docs":{},"df":0,"2":{"docs":{},"df":0,"0":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}},"5":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}}}},"x":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":2.23606797749979},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":7,"/":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.449489742783178}},"df":1}},"t":{"docs":{},"df":0,"'":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772}},"df":5},"’":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":2}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":2}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}},"i":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"'":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":8},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":3}}},"’":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":4}}},"y":{"docs":{},"df":0,"'":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":3}},"’":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":3}}}},"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1,"g":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.6457513110645907},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.23606797749979},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":2.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.23606797749979},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.7320508075688772}},"df":15},"k":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":8}},"r":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":3}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.7320508075688772},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.7320508075688772},"https://naps62.com/speaking/":{"tf":1.4142135623730951}},"df":11}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.449489742783178},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":7,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":5}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":4}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.7320508075688772},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":2.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.23606797749979},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.7320508075688772}},"df":11,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951}},"df":1}}}}}},"w":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}},"u":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":2}},"i":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":3,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":2.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.23606797749979},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.7320508075688772},"https://naps62.com/posts/knowledge-base/":{"tf":2.449489742783178},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":2.23606797749979},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":2.0}},"df":15,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"1":{"docs":{},"df":0,"_":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}},"/":{"docs":{},"df":0,"1":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}}}}}}},"p":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.7320508075688772}},"df":1}}},"l":{"docs":{},"df":0,";":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":2}}}},"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"x":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951}},"df":1,"'":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"(":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}}}}},"c":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":2,"2":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}},"o":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.7320508075688772}},"df":1,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":5}}},"g":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":2}}},"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.0}},"df":1,"=":{"docs":{},"df":0,"$":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":2},"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.23606797749979},"https://naps62.com/posts/knowledge-base/":{"tf":2.449489742783178},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.6457513110645907},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/speaking/":{"tf":1.7320508075688772}},"df":8,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":5,"i":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":2}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951}},"df":1}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":2}}}},"y":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":1}}}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/speaking/":{"tf":1.4142135623730951}},"df":2}}},"i":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":1},"n":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.7320508075688772}},"df":1}}},"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":2.449489742783178}},"df":1,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"_":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1},"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951}},"df":1}}}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}}}}},"/":{"docs":{},"df":0,"1":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}},"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"/":{"docs":{},"df":0,"1":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}}}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,"/":{"docs":{},"df":0,"1":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}}}}}}}}},"p":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951}},"df":1}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":6.082762530298219},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":3}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.7320508075688772},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":5,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"3":{"docs":{},"df":0,"0":{"docs":{},"df":0,"p":{"docs":{},"df":0,"x":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}},"5":{"docs":{},"df":0,"0":{"docs":{},"df":0,"p":{"docs":{},"df":0,"x":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}}}}},"x":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.7320508075688772}},"df":1,"(":{"docs":{},"df":0,"$":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951}},"df":1}}}}},"3":{"docs":{},"df":0,"0":{"docs":{},"df":0,"p":{"docs":{},"df":0,"x":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.0}},"df":1}}}},"5":{"docs":{},"df":0,"0":{"docs":{},"df":0,"p":{"docs":{},"df":0,"x":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.0}},"df":1}}}}}},"z":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}},"e":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}},"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.7320508075688772},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":10,"a":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":3,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"/":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"/":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":3.7416573867739413},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":4}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":1}}}},"m":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":2}}}},"u":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.23606797749979},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":8}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":2}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.8284271247461903}},"df":2}}}}},"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":2}},"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":4}}}}},"o":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.6457513110645907},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":13}},"y":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1,"p":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":4.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":4.123105625617661},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":8,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.6457513110645907}},"df":1}}}}}}}},"u":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.0}},"df":1}}}}},"i":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951}},"df":1},"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":2,"s":{"docs":{},"df":0,"#":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":3.1622776601683795}},"df":2}}}}}}},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}},"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.7320508075688772},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":3,"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":3}}}}}}},"o":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":2,"n":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"j":{"docs":{},"df":0,"o":{"docs":{},"df":0,"y":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}},"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}},"q":{"docs":{},"df":0,"u":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}},"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":2},"x":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951}},"df":1}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":5}},"t":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":2.0}},"df":1}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}}}}}},"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":2}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":3}}}},"p":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.449489742783178},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":2.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":3.872983346207417},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.7320508075688772},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.449489742783178},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":2.23606797749979},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":3.605551275463989},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":2.449489742783178},"https://naps62.com/speaking/":{"tf":1.0}},"df":17,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":2.23606797749979},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.0}},"df":4}}},"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772}},"df":2}},"s":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":3.3166247903554},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":2.6457513110645907},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.6457513110645907},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":3.605551275463989},"https://naps62.com/posts/knowledge-base/":{"tf":3.3166247903554},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":3.4641016151377544},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":3.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":2.449489742783178},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":3.3166247903554},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":2.23606797749979},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":2.8284271247461903},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":2.23606797749979},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":2.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":4.898979485566356},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":3.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":3.3166247903554},"https://naps62.com/speaking/":{"tf":1.4142135623730951}},"df":17,"a":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.449489742783178},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.4142135623730951}},"df":6,"'":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1},"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951}},"df":1}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":1}}}}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":7}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951}},"df":1}}}}}},"v":{"docs":{},"df":0,"2":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}},"u":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.6457513110645907},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":7}},"n":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":2.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.8284271247461903},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":5}},"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"u":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/knowledge-base/":{"tf":2.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.7320508075688772},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/speaking/":{"tf":1.0}},"df":10,"f":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772}},"df":7}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951}},"df":1}}}}},"i":{"docs":{},"df":0,"a":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":6},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951}},"df":2,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,"(":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,".":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"w":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}},"m":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":3.4641016151377544},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":3.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":2.6457513110645907},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":2.0}},"df":6,"/":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"x":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"y":{"docs":{},"df":0,".":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"x":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"y":{"docs":{},"df":0,".":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"l":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":2},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.4142135623730951}},"df":2}}}}}}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951}},"df":1}}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951}},"df":1}}}}},"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951}},"df":1}}}},"w":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":3}},"l":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/speaking/":{"tf":1.4142135623730951}},"df":1,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/":{"tf":1.4142135623730951}},"df":1}}}},"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":2.449489742783178},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":2.23606797749979},"https://naps62.com/posts/knowledge-base/":{"tf":2.449489742783178},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":3.3166247903554},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":2.449489742783178},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":14}},"r":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":2.23606797749979}},"df":1}},"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}},"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}},"y":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":3.3166247903554},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":3.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.7320508075688772},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.449489742783178},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.8284271247461903},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":2.0},"https://naps62.com/speaking/":{"tf":1.4142135623730951}},"df":13}},"e":{"docs":{},"df":0,"'":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772}},"df":3}},"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.7320508075688772},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":6},"v":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}},"b":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.23606797749979},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.449489742783178},"https://naps62.com/speaking/":{"tf":1.0}},"df":5,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772}},"df":1,"'":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":3,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772}},"df":1,"]":{"docs":{},"df":0,"(":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,":":{"docs":{},"df":0,"/":{"docs":{},"df":0,"/":{"docs":{},"df":0,"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"n":{"docs":{},"df":0,"f":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}}}}},"e":{"docs":{},"df":0,"k":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":3}}},"l":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.7320508075688772},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":2.449489742783178},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.6457513110645907},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":15}},"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":4}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}}},"’":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":2.449489742783178}},"df":4}},"r":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.7320508075688772},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":6},"v":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":4}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"'":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":6},"e":{"docs":{},"df":0,"v":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":8}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":1}}},"’":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":7}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1},"b":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":3}}}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.4142135623730951}},"df":5}},"o":{"docs":{},"df":0,"p":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951}},"df":3},"t":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}},"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}}}}},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.7320508075688772},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":2}}}},"r":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":1}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":8}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":2.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":11}}}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.4142135623730951},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.4142135623730951}},"df":4}},"’":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":5,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}}}}}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}},"k":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.23606797749979},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.7320508075688772},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.7320508075688772},"https://naps62.com/posts/knowledge-base/":{"tf":2.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.4142135623730951},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":2.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":2.23606797749979},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":2.449489742783178},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.4142135623730951}},"df":14,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"/":{"docs":{},"df":0,"0":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}}}}}}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://naps62.com/":{"tf":1.0},"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/knowledge-base/":{"tf":1.4142135623730951}},"df":5}}}}},"l":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":2.449489742783178},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":3}},"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":3}},"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":2}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"'":{"docs":{},"df":0,"v":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1}},"’":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951}},"df":2}}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":5,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/":{"tf":1.0},"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/focused-writing-in-vim/":{"tf":2.23606797749979},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.7320508075688772},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.4142135623730951},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":2.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.7320508075688772},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.7320508075688772},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0},"https://naps62.com/speaking/":{"tf":1.0}},"df":15},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":6}}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.4142135623730951}},"df":2,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"f":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}},"w":{"docs":{},"df":0,"w":{"docs":{},"df":0,".":{"docs":{},"df":0,"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}}}},"x":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772}},"df":2,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":2.0}},"df":1}}}}}}},"y":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":2.0}},"df":1}}},"e":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.7320508075688772},"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"'":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.4142135623730951},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":2},"l":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":5}},"r":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0},"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.7320508075688772}},"df":7},"v":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"'":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}},"’":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1},"l":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951}},"df":3}},"r":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.4142135623730951},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.4142135623730951},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":2.0}},"df":4},"v":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":2}}}},"u":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}},"z":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.4142135623730951}},"df":2,"(":{"docs":{},"df":0,"[":{"docs":{},"df":0,"a":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.4142135623730951}},"df":1}},"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}}}}}}},"q":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.4142135623730951}},"df":1}}}}}}},"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1,"k":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":2.23606797749979}},"df":1}}}}}}}}}}},"k":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":2.0}},"df":1,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.7320508075688772}},"df":1}}},"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}},"z":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.4142135623730951}},"df":1}}}},"title":{"root":{"docs":{},"df":0,"3":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"p":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}}}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}}}}}},"c":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"y":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":5,"’":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}}}},"z":{"docs":{},"df":0,"f":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":1,"i":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1}}},"k":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}}}}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,"6":{"docs":{},"df":0,"2":{"docs":{"https://naps62.com/posts/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{"https://naps62.com/posts/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":3}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"tf":1.0}},"df":1}}}}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}},"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":3}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"tf":1.0}},"df":1}}}}}}}},"o":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/pouring-protocols-in-elixir/":{"tf":1.0}},"df":1}}}}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/easily-merging-pull-requests/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{"https://naps62.com/posts/knowledge-base/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}},"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":1}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":3}}}},"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"x":{"docs":{"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"tf":1.0}},"df":1}}}}},"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"tf":1.0}},"df":1}}}}}}}},"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"tf":1.0}},"df":1}}}}}}},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://naps62.com/posts/understanding-elixir-genstage/":{"tf":1.0}},"df":1}}}}}}}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0},"https://naps62.com/posts/knowledge-base/":{"tf":1.0},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-i-projections/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"tf":1.0},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"tf":1.0}},"df":6}}},"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"https://naps62.com/posts/focused-writing-in-vim/":{"tf":1.0}},"df":1}}}}}}}},"documentStore":{"save":true,"docs":{"https://naps62.com/":{"body":"Hi, I'm Miguel | @naps62.\nI'm a software developer. Currently doing research and blockchain development at Subvisual and Lightshift Capital.\nCurrently focused on building Iron Wallet, a desktop crypto wallet focused on development workflows.\nI also write, do some ocasional public speaking, and play chess.\n","id":"https://naps62.com/","title":""},"https://naps62.com/posts/":{"body":"","id":"https://naps62.com/posts/","title":"Miguel Palhas | @naps62"},"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"body":"This post was originally posted on my company's blog. Feel free to check out the original\nLast year, I took on the task of improving the continuous process over at Utrust. We weren't really happy with\nthe amount of work that went into our releases, and I was looking for a more agile approach, where everyone from\ndevelopers to the QA team could do their part with low friction.\nCoincidentally, that project started right around the same time GitHub Actions went into public beta. Some of our\nproblems were related to shortcomings on our existing CI solution, so it felt right to see what GitHub had to offer.\nI ended up pleasantly surprised. But first, let's talk about what exactly was wrong with our previous CI.\nShortcomings of traditional CIs#\nI've worked with a fair amount of CIs over the years...\n\n\nThere was always something that seemed a bit off, though. They all do one simple, but very useful, thing: they react to\ncommits\nThe main use case for this is the now common one: to run tests for every new version of your code. But any kind of\nautomated task can be triggered, really. A deploy is very common as well, or a preview build for testing.\nBut a lot of these automations shouldn't necessarily need a commit. They are not triggered by changes in the code.\nDeploys might be triggered by some higher-level decision, or a QA team manually approving the latest version, which was\ncommitted days ago.\nNot everything is a commit#\nThis led to the common practice of creating \"special\" ways to trigger these commits. In CircleCI, for\nexample, you'd do something like this:\nworkflows:\n  build:\n    release:\n      - deploy_to_staging:\n          filters:\n            branches:\n              only:\n                - staging\n\nWith this, commits to the staging branch would trigger a deploy to staging. Seems simple enough. But now you need\na branch for every single environment. And probably quite a few push -f commands, or similar git sorceries to force\na commit from your normal workflow into a branch whose history is messier than the plot of Primer.\nGitHub API to the rescue#\nThe problem here is that we're solving things the wrong way. A deploy is not a commit. It's a deploy.\nAnd GitHub actually has a Deployments API that encapsulates that exact concept. You can tell\nGitHub to create a deployment, by providing a certain git reference, an environment to which you want to deploy, and\nother optional parameters.\nGitHub will then collect this and build a history of all the deploys you requested, and the status of each one (which\ncan be updated using the same API).\nThis API won't really do anything by itself, though. It builds a nice log, but that's about it. You can subscribe to\nwebhooks from this API though.\nSo any 3rd party service could theoretically listen to these webhooks, and process the deployment you requested, instead\nof forcing you the come up with fancy ways to commit things in a particular way.\nNone of these CIs seem to do that, though. And that's why GitHub Actions are so different.\nGitHub Action triggers#\nGitHub's new toy allows us to build jobs that can be triggered in a variety of ways. You can\nhave the traditional \"on every push\" jobs, but also more fancy stuff, such as \"on every deployment created\", or even \"on\nevery commit to an issue\".\nname: GitHub Action Example\n\non: [deployment]\n\njobs:\n  steps:\n    # ...\n    - run: npm run deploy ${{ github.event.deployment.environment }}\n    # ...\n\nThis sample does not rely on a git push in any way. All that is needed to trigger it is to call the Deployments API,\nand the rest of the job can pick up parameters from the webhook's data to figure out what to do, such as what\nenvironment to deploy to.\nPreventing redundant builds#\nOne other thing that other CIs also aimed to achieve, is to optimize usage by preventing branches from triggering builds\nunless a Pull Request is open for them. The rationale here is that a work-in-progress branch rarely needs CI feedback,\nand would only waste resources. This is often a configurable option in CI settings. But with GitHub action triggers, we\ncan do a bit more than that, by having that configuration in the source code itself:\nname: GitHub Action Example\n\non:\n  push:\n    branches:\n      - master\n    tags:\n      - '*'\n  pull_request:\n    types: [opened, synchronize]\n\njobs:\n  # ...\n\nWe might want to always trigger builds for the master branch, or for every tag that is created. But for pull requests\n(which have their own webhook, and therefore, trigger), we can specify that only creation or updates to those Pull\nRequests' history should trigger the job.\nManual workflows with comments#\nWe can also react to comments on the Pull Request itself, which can be useful if you want a more seamless integration of\nsome features.\nIn my case, I wanted to deploy a preview version of Pull Requests to our frontend application. It wasn't efficient to\ndo this for every single PR though (only a small subset of them actually need this), so we went with this instead:\n\nWhenever someone comments on a Pull Request and includes the word \"preview\", an Action will be triggered which will take\nthat branch and deploy a live preview of it, so it can be easily tested.\nThe ease with which this was all done by just using different hooks made this very pleasant to work with.\nReusable actions#\nA second issue I often had with previous CIs was the difficulty, or complete lack of a way to create reusable parts of\nyour pipeline, so you can compose other jobs with them.\nYes, YAML allows you to reuse blocks...\n\ncomponent: &amp;component\n  foo: bar\n\nextension: *component\n  baz: biz\n\n... but they don't look pretty, especially once they start to grow. And if you, like me, have any experience mantaining\na large project with multiple CI worflows and configurations, you probably know that things tend to get out of hand.\nIt's always a single YAML file, which can grow to hundreds of lines. You can reuse blocks of YAML, but they may end up\nrunning under different contexts (e.g.: different docker images, different dependencies installed, etc).\nCircleCI did introduce the concept of Orbs in their ecosystem, which attempts to tackle this. However,\ntheir reusability is limited.\n# circleci.yml\n\npush_s3:\n  executor: ubuntu\n  steps:\n    - my-custom-org/my-custom-command:\n        arg: 'foo'\n\nThis is a trimmed-down example, where a custom command is encapsulated in a my-custom-orb Orb. You may notice that the\nmain config file is the one who specificies the execution environment (ubuntu, in this case). So, if the Orb tries to\nyum install git, this would fail, because that package manager isn't used in Ubuntu.\nSo you end up with a mess of a script that does a whole bunch of magic just to figure out how to install the\ndependencies it needs. Check out the actual source code for the official Orb that installs awscli on\nyour jobs. It's a bit of a mess, isn't it?\nYou could delegate everything into a ready-to-go Docker container, and run whatever you need in there. But then you lose\naccess to the overall filesystem of your original job, where you already cloned your project and created a bunch of\nuseful artifacts. Not great, either.\nGitHub Actions solves this by allowing you to write reusable actions in two different ways. None of those are YAML, and\nboth of those are way better:\n\nAs a Docker container, but one that will automatically mount the local filesystem into it. You get access to\neverything your job has been doing so far and, since it's docker, you can pretty much install whatever dependencies\nyou need, without caring about polluting the host job.\nIn JavaScript. Which, as you may know, is a pretty powerful tool.\n\nHere's a basic GitHub Actions job:\nname: Demo\non: [push]\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n\n  steps:\n    - name: Checkout repo\n      uses: actions/checkout@v2\n\n    - name: Install deps\n      run: npm install\n\n    - name: Run tests\n      run: npm run test\n\nThe first step here, actions/checkout@v2 is what checks out your repo to the local filesystem. And it's actually done\nin JavaScript! The syntax, as you may tell, looks suspiciously like a link to a GitHub repo. And, well, it is. If you\ncheck release v2 on that repository, you'll see the actual JS code used to clone your repo into\nthe action.\nAnd of course, you're free to fork this action and edit it with your own customizations, if you need. The exact same\nflow that GitHub already allows for regular open-source work, now applied to their own CI.\nOk, what's the catch?#\nAs you may be able to tell, I like GitHub Actions quite a lot. They're not without their shortcomings though.\nI have 2 major concerns:\n\nStill a new kid in the block. Public beta opened less than a year ago, which might be good enough of a reason to\nthink twice before jumping into the hype-train. It's still in it's infancy and, as such, a lot of things may not be\nas polished as you'd expect. There's quite a lot of missing features being requested by the community, and hopefully\nwe'll see them implemented soon enough.\nNo SSH access for debugging. This might fall under the previous point, but the lack of ability to debug failed\nactions by SSH'ing into the container was almost a deal breaker for me. I spent countless hours debugging things via\ntrial-and-error that would have been way faster had I just been able to see what happened for myself.\n\nWrapping up#\nThese drawbacks, as concerning as they may have been, didn't prevent me from using GitHub Actions over the past few\nmonths, and even performing a company-wide migration at Utrust. This post was my way of compiling a short\ntutorial around how I started using them, and how they're so much different than previous CIs I've tried. By far, the\nease with each I'm able to create reusable, encapsulated actions, and the ability to react not just to commits, but to\nany other event GitHub emits, is a very powerful tool.\nLet me know on twitter if you have any thoughts about this!\n","id":"https://naps62.com/posts/continuous-stuff-with-github-actions/","title":"Continuous Stuff with GitHub Actions"},"https://naps62.com/posts/easily-merging-pull-requests/":{"body":"I try to automate all the annoying repetitive things I can. And not long ago, merging Pull Request was certainly on top of my list.\nWhether it is for my own personal projects or within Group Buddies, the process is mostly the same all the time:\n\nUpdate my local copy of the master branch, or whichever branch the pull request was targeting.\nGo back to the branch I'm about to merge, and rebase it against master. Conflicts might show up here, and should be solved.\nMerge the branch. By this point, not event the GitHub one-click merge is helpfull, since I would still have to push my local changes again (possibly using -f due to the rebase). Also, going back and forth between the browser is just tedious.\nDelete the branch, both locally and remotely, since it is no longer needed.\n\nFortunately git is easily extensible. You can add subcommands to git by having executables following the appropriate naming convention git-subcommand, and placing them in your $PATH. So, for instance, whenever you call git hello, git will look for an executable called git-hello.\nZamith already covered this in his last post, Supercharge your git\nThe goal#\nUltimately, I wanted to be able to just run git close-pull-request while on a feature branch, and have the command do all the work for me. I eventually aliased that to git cpr, since the name was obviously too long.\nAnother goal I had was portability. For these kind of work, I tend to stick with languages that are supported natively on any Linux distribution (like shell scripting or Perl). Since I do a fair amount of work on virtual machines, or even Raspberry Pi's, it's useful for me not to rely on Ruby for my workflow. This time, I went with shell scripting.\nThe script#\nHere's the full script I wrote to close (the entire flow I described above):\n##!/bin/sh\n\ncurrent=$(git branchname)\ndestiny=${1:-master}\n\n## 1. Update destiny\ngit fetch\ngit checkout $destiny\n[[ $? == 0 ]] || exit \"failed to switch to $destiny\"\ngit rebase\n\n## 2. rebase PR branch\ngit checkout $current\ngit rebase -i $destiny\n\n## 3. merge\ngit checkout $destiny\ngit merge --ff-only $current\ngit push\n\n## 4. remove branch\ngit nuke $current $destiny\n\nDon't bother about the git nuke for now, it's another custom command, and is explained below.\nLet's go through this one step at a time. First, I declare a couple of variables:\ncurrent=$(git branchname)\ndestiny=${1:-master}\n\nVariables#\nThe current variable gets the name of the current branch. which will be the one corresponding to the Pull Request I'm merging. For that I use another custom command branchname, which is simply the following:\n##!/bin/sh\ngit rev-parse --abbrev-ref HEAD\n\nAnd the destiny variable states the branch to which I want to merge, which comes from the first argument. That weird syntax (if you're not familiar with shell scripting), indicates that if no argument is given, it will default to master, which is the value I want most of the time.\nSo by calling git cpr with no arguments, I'm merging with master, but I can override that by calling git cpr other-branch\n1. Update master#\nThe first step is updating the master branch. This should be a simple fetch/rebase. But in practice, I needed one extra check in between:\n[[ $? == 0 ]] || exit \"failed to switch to $current\"\n\nThis is because, switching between branches with checkout might fail. For instance, if there are unstaged changes waiting to be committed. In this scenario, I want to play it safe and just abort the script with exit. No harm done.\n2. Rebase branch#\nAfter that, I want to rebase the target branch against master. I do this with an interactive rebase, since I usually want to squash or reword some commits.\nIf there are conflicts, the rebase itself will abort and prevent the rest of the script from going on. When that happens, I have to solve the conflicts like I normally would, and then try the command again.\n3. Merge#\nThe third step involves going back to master and merging the branch. There is no rocket science here. I used the --ff-only option just to make sure I'm not creating a merge commit. That shouldn't happen anyway since I'm rebasing both branches prior to the merge, but you can never be too safe.\n4. Delete the feature branch#\nFor this I'm using yet another custom command. I extracted this since I ended up using it a lot to clean up old branches. Here it is:\nbranch=$1\ndestiny=${2:-master}\ngit checkout $destiny\ngit push --delete origin $branch &gt; /dev/null &amp;\ngit branch -D $branch\n\nI start by moving to another branch (to prevent problems when I trying to delete the branch I'm currently in). Then I just call the commands to delete both the remote branch on GitHub, and the local one.\nI'm sending that to the background because it might take a second or two to finish, and I also don't care for it's output, which would show up randomly later since the terminal didn't wait for it.\nFurther reading#\nThere are a lot of suggestions out there on how to extend git, but a few I would recommend are git-wtf and git-publish-branch (although the latter is not that much useful since the latest git updates).\nAdditionally, I suggest you check out hub, or the newer and faster alternative, gh. Both of these add extra functionality that might prevent you from having to write your own custom scripts.\n","id":"https://naps62.com/posts/easily-merging-pull-requests/","title":"Easily Merging Pull Requests"},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"body":"Note: This post was originally written on AppSignal's Elixir Alchemy Blog\nToday we stir into our cauldron of magic potions and idempotence, and brew some neat Elixir database tooling. We’ll do so by going through my experience of setting up my own.\nComing from Ruby on Rails, one of the things that I’ve seen lacking in the Elixir space when it comes to web applications is the helpful tooling that existed in the ecosystem to deal with databases in production. In this post, we’ll cover some of these and see how we can create similar tools in Elixir.\nCustomizing the Workflow When Setting up a Database#\nMost deployment solutions for Ruby on Rails would handle the setup of the database, tying directly into the way they are configured in the framework. This often included such things as:\n\nCreating and setting up the initial database\nRunning all existing migrations\nSeeding the database\nContinuously running new migrations as they get added in future releases\n\nThis was all part of the ecosystem and was often taken for granted. But actually, there’s a lot of work involved in plugging all those things together. And sometimes, assumptions were made that made it difficult to tweak this flow to your particular needs.\nWhat if you have some kind of horizontal scaling on your application and need a more custom way to decide when and how migrations are executed? Or simply, what if you want to customize the order or the way each of these steps is done?\nThe Ruby way of convention-over-configuration is pretty cool, especially when it comes to being a friendly environment for newcomers. But sometimes, the Elixir approach of explicitness has its benefits as well.\nWith my latest projects, I ended up with some behavior where the ability to fully customize this workflow came in very handy. This ended up in a way that ensures our database is always in a ready state across deploys and even across database resets. Let’s dive into what we did and learned!\nRunning Migrations#\nAs an introduction, let’s first see how migrations can be executed on Elixir. I’ll be using distillery releases to showcase this, but the process is pretty much translatable to any other Elixir/Erlang system.\ndefmodule MyApp.Migrator do\ndef run do\n{:ok, _} = Application.ensure_all_started(:my_app)\n\npath = Application.app_dir(:my_app, \"priv/repo/migrations\")\n\nEcto.Migrator.run(MyApp.Repo, path, :up, all: true)\n  end\n  end\n\nThe above module provides a function that executes migrations for a particular Repo in our application. Right from the start, we notice that all of this is very easily customizable since it’s pure Elixir code that we can change ourselves. Do you have two repos with different migration directories for each? Do you have an umbrella app with several repos spread across it? All of that can be handled here, according to your application’s needs.\nThe above function is pretty much the equivalent of mix ecto.migrate. But mix tasks aren’t available in Elixir releases, which is why we end up having to write them ourselves.\nTo run this within our release, we can run this script as a start hook:\n# rel/pre_start_hooks/10_migrate.sh\n\n$RELEASE_ROOT_DIR/bin/my_app command Elixir.MyApp.Migrator run\n\n\n# rel/config.exs\n\n# ...\n\nrelease :my_app do\n # ...\n\n set(pre_start_hooks: \"rel/pre_start_hooks\")\n\n set(\n   commands: [\n     migrate: \"rel/pre_start_hooks/10_migrate.sh\"\n   ]\n )\nend\n\nThese two additions to our Distillery setup will ensure that the migration function is called every time the application starts (which means, every time we deploy a new version). So migrations will end up running automatically as they’re deployed.\nSeeding Your Database#\nNow that we have played around with migrations, let’s look into seeding your database. Usually, mix seed will be used to insert initial records in your database. These are the records your app needs to function properly before your users get to it.\nThis task just runs an Elixir script stored in priv/repo/seeds.exs. But as we’ve seen, Mix tasks are not available within a release.\nUsually, your seeds file will consist of something like this:\n[\"user\", \"admin\", \"editor\"]\n|&gt; Enum.each(fn role -&gt;\n  MyApp.Role.new(name: role)\n  |&gt; MyApp.Repo.insert()\nend)\n\nMyApp.User.new(name: \"Admin\", role: \"admin\")\n|&gt; MyApp.Repo.insert()\n\nTo set this up within Distillery, I moved this logic into its own compiled module rather than an .exs script:\ndefmodule MyApp.Seeds do\n  def run do\n    [\"user\", \"admin\", \"editor\"]\n    |&gt; Enum.each(fn role -&gt;\n      MyApp.Role.new(name: role)\n      |&gt; MyApp.Repo.insert()\n    end)\n\n    MyApp.User.new(name: \"Admin\", role: \"admin\")\n    |&gt; MyApp.Repo.insert()\n  end\nend\n\nThe priv/repo/seeds.exs script still exists, but it just calls the newly created function:\n# priv/repo/seeds.exs\n\nMyApp.Seeds.run()\n\nThis way, we’re ready to set it up as a Distillery pre-start hook.\nThis is usually fine for local development, but if you’re setting this up as a pre-start hook, it means this script will be executed over and over again, after each new deploy. If you’re not careful, you may end up inserting duplicate seed data each time.\nOne could solve this with some tricks that try and check if seeds were already run (such as setting a flag somewhere in the database and checking for it). But there’s a much more powerful way: Idempotent seeds.\nIdempotent Seeds#\nLet’s get to the coolest stuff!\n\nIdempotence is the property of certain operations in mathematics and computer science whereby they can be applied multiple times without changing the result beyond the initial application.\n\nIn short, an idempotent operation is one that you can harmlessly run multiple times, without fear of ending up with duplicate or accumulated results. For database seeds, ensuring their idempotency means you don’t need to worry about ending up with multiple admin users, for example.\nAs it turns out, another very useful feature of moving seeds logic into a compiled module is the ability to unit-test them! Which is what I did:\ndefmodule MyApp.SeedsTest do\n  use MyApp.DataCase, async: false\n\n  test \"creates an admin user\" do\n    MyApp.Seeds.run()\n\n    assert admin = MyApp.Repo.one(MyApp.User)\n    assert admin.role == \"admin\"\n  end\n\n  test \"admin user creation is idempotent\" do\n    MyApp.Seeds.run()\n    MyApp.Seeds.run()\n\n    user_count = MyApp.Repo.aggregate(MyApp.User, :count, :id)\n    assert user_count == 1\n  end\nend\n\nThe first test ensures the seed does what it’s supposed to (in this case, the simple creation of a role in the database). The second one ensures that running the seeds twice doesn’t affect the final result.\nIn a complex system where your codebase is constantly evolving, and the rest of your team is building features on top of other features, it’s common for someone to accidentally add changes that don’t behave as expected once they go live. It’s easy for a developer on your team to add a few new seeds, forgetting how that will play out in production. Let’s see a more practical example of this.\nSeeding Feature Flags#\nOne feature we rely a lot on is feature flags, which give us the ability to toggle behavior on and off without requiring a new release. In Elixir, I do this using the FunWithFlags package.\nWhen a new flag is being added to the codebase, its initial value may not be too trivial to introduce. Are we adding a new feature, and therefore the flag should start out as false? Or are we wrapping an existing feature around a flag, so that we can later remove or change it, in which case the flag should be true by default, so as to preserve behavior?\nThis may even change between environments. We may want certain flags to be enabled by default on our staging system but disabled in production until we manually enable them.\nThis requirement ties in nicely with our ability to run seeds for our application in an idempotent way, check it out:\ndefmodule MyApp.FlagsSeeds do\n  def run do\n    set_flag_if_not_set(:new_disabled_feature, false)\n    if System.get_env(\"ENV_NAME\") == \"staging\" do\n      set_flag_if_not_set(:new_staging_feature, true)\n    else\n      set_flag_if_not_set(:new_staging_feature, false)\n    end\n  end\n\n  defp set_flag_if_not_set(flag_name, value) do\n    {:ok, existing} = FunWithFlags.all_flag_names()\n\n    cond do\n      Enum.member?(existing, flag_name) -&gt;\n        # flag already exists. skip operation\n        nil\n\n      value == true -&gt;\n        FunWithFlags.enable(flag_name)\n\n      value == false -&gt;\n        FunWithFlags.disable(flag_name)\n\n      true -&gt;\n        raise \"Invalid flag value\"\n    end\n  end\nend\n\nWith this module, we’re able to programmatically define the initial value of our seeds, which can be dependent on some other factor, such as which environment we’re running in.\nThe set_flag_if_not_set/2 function is the materialization of our idempotency requirement. We wouldn’t want a new release to disable a flag that we have already manually enabled, right?\nBy first checking if the flag already exists, we ensure two things:\nThis flags module is idempotent since a second run will skip all flags\nIt only works for unset flags, allowing us to manually set their values when needed, without fear of being overridden\nWe can get even fancier when testing this:\ndefmodule MyApp.FlagSeedsTest do\n  use MyApp.DataCase, async: false\n\n  test \"is idempotent\" do\n    MyApp.FlagSeeds.run()\n    current_flags = FunWithFlags.all_flags()\n\n    MyApp.FlagSeeds.run()\n    new_flags = FunWithFlags.all_flags()\n\n    assert current_flags == new_flags()\n  end\n\nend\n\nNow, if I or someone else on my team wrongfully change the seeds file in a way that breaks idempotency, our test suite will catch that before it even reaches a live environment, saving everyone a lot of trouble.\n👋#\nI hope you enjoyed this little dive into some of the tooling we built, and that you’ve picked up some things you can use yourself. 👋\n","id":"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/","title":"Flags, Seeds and Idempotency: Database Tooling with Elixir"},"https://naps62.com/posts/focused-writing-in-vim/":{"body":"I've been working on getting an improved focus environment to write blog posts in. There's a lot of \"Focus mode\"\nfeatures out there in pretty much every editor. But in Vim, I wanted to piece together a few different things, and also\nmake some additions of my own.\nI use a 4K monitor, which is great for gaming &amp; programming, but kind of overkill for writing blog posts. I don't\nwant all that real estate.\nThe end result#\nSo here's the gist of what I achieved (or a video right below, showcasing the final thing). Running :Focus on Vim does\na bunch of different things:\n\nCenter &amp; focus the 80-wide lines of content;\nIncrease the font size... a lot;\nHide away all the visual noise (statusbars, line numbers, autocomplete, window manager, and so on);\nDisable editor features targeted at programming (looking at you, autocomplete);\nMaybe have a Table of Contents on the left side, for easy navigation on long posts.\n\n\n  \n  \n\nAll of this is achieved with a few existing vim plugins, all tied together in a single Focus() function. There's also\nsome bits that need to go beyond Vim, such as increasing font size, for instance.\nThe road towards it#\nLet's start with the easy stuff. Creating a :Focus command is pretty straightforward.\nlet g:focused = 0\nfunction! Focus()\n  if g:focused == 0\n    \" magically enable focus stuff\n    let g:focused = 1\n  else\n    \" disable all of it again\n    let g:focused = 1\n  endif\nendfunction\n\nWe can even have our function work as a toggle. Calling it a second time will (ideally) undo all the evil we did.\nLet's now go through all the stuff we can enable in that if statement. Feel free to cherry-pick whichever ones work for\nyou. That's the beauty of using custom vim code instead of a one-size-fits-all solution.\nPS: For each section, I'll include the vimscript code necessary to enable it. For disabling it (the else part of\nthe if statement), check out the full code in this gist.\n1. Goyo - Distraction-free mode#\nThis plugin adds a distraction-free mode to Vim, which hides most the of clutter already.\n\" enable distraction-free with a 120 column wide buffer\n:Goyo 120\n\n2. Limelight - for even more focus#\nBuilt by the same author, this goes one step further, and dims down all content but the currently highlighted paragrah.\n:Limelight\n\n3. VOoM#\nYet another package. This one adds a Table of Contents to the left of your content buffer. It builds an index for markdown and other standard content formats, making it pretty useful for navigating large files.\n\" enable sidebar TOC for a markdown file\n:VOoM markdown\n\n4. Disable additional vim clutter#\nNow for the actual custom stuff. These are a few small settings that I normally use on Vim, but wanted to disable while\nin focus mode:\n\" disable highlighting of the current line\nset nocursorline\n\n\" disable highlighting of the current column\nset nocursorcolumn\n\n\" even though Goyo hides the status bar, a small `-- INSERT --`\n\" was still showing up in the corner.\n\" This gets rid of that as well\nset noshowmode\n\n5. Always-centered cursor#\nThis one is probably the most hacky thing on this list. Sorry, but I couldn't resist\nI wanted the current line to always be vertically centered as well.\nUsing set scrolloff=20 would tell vim to scroll 20\nlines past the End-of-File. But while writing, the current text would still end at the bottom of the screen, unless\nI manually scrolled down those extra lines.\nThe trick is to override the default navigation mappings, and combine them with zz which brings the cursor current\nline to the vertical center of the screen:\n:nmap j jzz\n:nmap k kzz\n:nmap G Gzz\n\nj, k and G are the movements I use most often. Appending zz to them automatically keeps my current focus right\nat the center. It's not perfect, but it's close enough.\n6. Hiding tmux's status bar#\nSince I always run Vim inside a tmux session, I wanted to hide that as well. This one is actually pretty simple:\n:silent !tmux set status off\n\n7. Increase font size#\nThis was the final piece, and another trick I had to use. However, without a bigger font size, everything before this\nwould really suck. 14pt fonts centered on a 4K monitor isn't really that useful, nor comfortable\nI use alacritty. Like most other terminals, there are shortcuts to zoom\nin/out, and reset. In my case, I have those set to Ctrl+', Ctrl+- and Ctrl+0, respectively. In alacritty.yml's\nconfig file, that translates to:\nkey_bindings:\n  - { key: Key0, mods: Control, action: ResetFontSize }\n  - { key: Apostrophe, mods: Control, action: IncreaseFontSize }\n  - { key: Subtract, mods: Control, action: DecreaseFontSize }\n\nAs far as I could tell, there is no command line API that I could call to achieve the same effects, so I went with the\nkeyboard shortcuts. Using xdotool, it's easy to send those keystroke signals to the terminal window, with a single\ncommand:\n:silent !xdotool key --repeat 10 Ctrl+apostrophe\n\nThis is using xdotool to send a zoom-in shortcut signal to the active window, 10 times.\nA similar xdotool key Ctrl+0 can be used to get back to the default zoom level at the end.\n10 was just an arbitrary number that got me to a visually comfortable level.\nWrapping up#\nI used this full setup for the first time while writing this post. It has a few rough edges that I'll still be\nimproving on in the future, but it's already proven extremely helpful.\nCheck out the full vim code here, or let me know on twitter if you have any thoughts on how to improve this.\n","id":"https://naps62.com/posts/focused-writing-in-vim/","title":"Focused Writing in Vim"},"https://naps62.com/posts/knowledge-base/":{"body":"I've been trying to grow my own knowledge base for a long time now, by keeping\ntrack of multiple notes taken from books, quotes, and other sources of\nknowledge.\nNow, and after a few iterations, I'm moving that to a more Unix-oriented\napproach, which I'm presenting here.\nTL;DR: I built my own terminal-based Zettelkasten system. Checkout the\nReadme and source code at Github.\nMy sources#\nI'm both the worst person at note taking, and the kind of person that needs\nnote-taking the most. My memory sucks, but so does my caligraphy.\nLike most other people, I consume information from several different sources. Here's a few:\n\nThroughout my work (google searches, stack overflow, conversations, etc)\nBooks, which I mostly consume with my Kindle, and sometimes Audible\nArticles (via both Feedly and Pocket)\nPodcasts\n\nYou may notice that I'm very digital-oriented. I do that both as a way to live\na more minimalistic lifestyle (less physical items + easier to travel), but also\nto be able to retrieve information more easily.\nUsing my Kindle allows me to highlight any quote I want to save for later. Same\ngoes for my news feeds. Audible also has a clipping feature, although it's\na bit more awkward to use, and doesn't provide any kind of programatic access to\ntext. For more ad-hoc situations, such as a conversation, a quick note on\nTodoist also works really well.\nThroughout my day, I want the ability to quickly highlight pieces of\ninformation, with the least amount of friction possible.\nPeriodically, usually at the end of each month, I'll go through all new notes,\nand organize them into my own knowledge base, with two main goals in mind:\n\nTo condense any potentially useful knowledge in an accessible way\nTo go through everything a second time (or more), to consolidate knowledge.\n\nWhenever I, later on, want to remind myself of a particular concept, or even\nfind a particular quote or definition to include in a talk I'm building, I'll\noften go back to this knowledge base. I'll also make a point to revisit notes\nfor a particular book at some point in the future, doing a slightly informal\nversion of Spaced\nRepetition\nSo here's how I built this knowledge base:\nFirst draft: Notion#\nMy first version of this knowledge base was built with\nNotion.\nNotion is a text editor with superpowers. It allows me to create whatever\nhierarchy I want. It supports full-text search. And works on all platforms\nwithout any extra effort, meaning I can have my knowledge available at all\ntimes.\nI can create a page for each book I read:\n\nAnd within those pages, I can use a markdown-like syntax to list highlights:\n\nBut this didn't fit my own workflow very easily.\nI'm a long-time linux user, and I've come to learn how to be productive with\ntools that I have available on my terminal. So it made sense to me that my\nknowledge base should be accessible on my terminal as well, and taking advantage\nof the tools that I already know and love.\nThis also allowed me to build some custom features that I've been wanting for\nsome time.\nWhich is why I build my own zettelkasten setup.\nA Zettelkasten#\n\na knowledge management and note-taking method used in research and study\n\nWikipedia\nI've actually only learned of this name recently, when reading a blog\npost that ended up being one of the inspirations for this\nwork.\nA zettelkasten is a personal knowledge base. The name is of german origin,\n\"Zettel\" meaning note, and \"Kasten\" meaning box.\nIt's not a concrete methodology, or a specific way of organizing information.\nIt's nothing more than a metaphorical box of notes.\nA unix-based zettelkasten#\nTo this end, I ended up building my own set of scripts to manage a knowledge\nbase, by stitching together multiple tools that are already part of my daily\nworkflow.\nNotes as markdown#\nEach note is represented as a single markdown file.\nMarkdown is intuitive enough to use in the context of a terminal, and syntax\nhighglighting allows me to leverage it for a few extra things, as we'll see\nHere's an example of a real note from my knowledge base:\n# Recalcitrance\n\nResistance towards helpfulness or evolution\n\nhttps://www.dictionary.com/browse/recalcitrance\n\n@superintelligence @nick-bostrom @book\n#definition #ai\n\nThis is a short one. A definition of a word. One that I learned while reading\nSuperintelligence\na few years ago.\nI chose to use hashtags, such as #definition to tag each note as I see fit,\nbut also to specify sources using @.\nThis allows me build tooling to search for both tags and sources, and quickly\nfind what I'm looking for.\nThis note is also not static. If I come back to it, I'm free to edit it as I see\nfit, or even add new tags, if I want to relate it with some newfound idea\npresent somewhere else in the base.\nSee it in action#\nHere's a quick rundown of what I have so far:\n\nThe knowledge base is pointed to by $ZK_PATH;\nzk new &lt;title&gt; creates a new note;\nzk tags starts an interactive fuzzy search across all existing tags;\nzk sources does the same thing, but for sources instead;\nzk search starts a full text search on the entire knowledge base.\n\n\nPS: As I mentioned, most of this is inspired by this\narticle. The author built and open-sourced his\nown system using very similar tools as the ones I did.\nCurious about what's underneath all this? It's actually fairly simple:\nGit#\nThe knowledge base itself is a git repo. Assuming you're a developer (or\nsimilar role), this should not require any further explanation. 😄\nVim#\nMy editor of choice. Since this is, at the moment, made for personal use,\nI haven't focused on supporting anything else, as I have no need for it\nRipgrep#\nRemember what I said about searching for tags or sources?\nripgrep is an extremely fast full-text search tool.\nI can build a search for tags (words starting with #) with something like the\nfollowing:\nrg --only-matching \"#[\\w\\-_]{3,}\" --type md ...\n\nFzf#\nFzf is a fuzzy-finder which, when coupled with ripgrep, provides a great\ninteractive and real-time search environment right in my terminal\nWrapping up#\nThis system is still in its early stages (in fact, I'm still in the process of\nmigrating some notes from Notion).\nIt does look very promising though, since I find myself using it a lot more\noften just because it sits right there in my terminal.\nCheck out the source code on GitHub, or let me know your\nthoughts about all this. 👋\n","id":"https://naps62.com/posts/knowledge-base/","title":"A knowledge base with Vim, Fzf and Ripgrep"},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"body":"Note: This post was originally written on AppSignal's Elixir Alchemy Blog\nDevelopers have a love-hate relationship with metaprogramming. On the one hand, it’s a powerful tool to build reusable code. On the other hand, it can quickly become hard to understand and maintain.\nI like to think of it as salt. It’s pretty handy on many occasions, but use just a little too much of it, and you’re left with an unenjoyable dish.\nAlso, large doses of either of them can lead to increased blood pressure. 😅\nHowever, metaprogramming has come a long way since it’s early days. While I still try not to overuse it, it’s become more useful and easy to work with. Let’s see how it evolved.\nC/C++#\nIf we go back a few decades, to a time when programming languages were more close to the metal, the C/C++ preprocessor was one of the only options we had to do something close to metaprogramming.\nThis preprocessor was literally what the name suggests: A parser that would run through C code, and process specific definitions (keywords such as #define and #if), and would output a final version of the C code to the compiler. This final version could change based on some criteria. It would look something like this:\n#define FOO 1\n\n#if FOO == 1\n#define MSG \"Hello, World\"\n#else\n#define MSG \"Goodbye, World\"\n#endif\n\n#include &lt;stdio.h&gt;\n\nint main() {\n  printf(MSG);\nend\n\nThis program would print \"Hello, World\", always. As you may guess, changing the FOO definition to 0, and re-compiling the program, would instead cause it to print \"Goodbye, World\" instead.\nThese preprocessor directives would often be used to create code targeting specific platforms or architectures. For example, you could set different behaviors for your program when compiled to target Windows systems than when targeting Linux systems. The two resulting binaries would have only the code that was relevant to that specific platform, and thus wouldn’t need to perform runtime checks for these conditions. These savings in storage and runtime performance could often be significant.\nHowever, if you have any C experience at all, you know how dangerous it is just in vanilla form. Now add a lot of preprocessing behavior on top of that, and it quickly becomes quite hard to manage. So it wouldn’t be advisable to use it for much more than small configurations, most of the time.\nRuby#\nWith better technology and higher-level scripting languages, also came the possibility of creating more elaborate styles of programming. Particularly in Ruby, metaprogramming proved to be a powerful, yet scary feature.\nThe way this works in Ruby is based on the idea that code is nothing more than a string of text, interpreted and executed by the Ruby environment.\nSince Ruby is interpreted at runtime, there’s no requirement of having the entire codebase compiled upfront. Ruby allows you to dynamically define instance methods on classes.\nAlso, due to the way Ruby classes and instances are constructed internally, you can even define methods for individual instances rather than the entire class!\nPS: Further reading on Ruby Classes here.\nclass Foo\n  def hello1\n    puts \"Hello from a regular method\"\n  end\n\n  [:hello2, :hello3].each do |f|\n    define_method f do\n      puts \"Hello from a dynamically-defined #{f} method\"\n    end\n  end\nend\n\nfoo = Foo.new\n\nfoo.define_singleton_method(:hello4) { puts \"Hello only from this instance of Foo\" }\n\nfoo.hello1\nfoo.hello2\nfoo.hello3\nfoo.hello4\n\nRuby is also pretty lax when it comes to editing existing code, even from the standard library. This is valid Ruby:\narray = [1, 2, 3]\n\n# will print out 3\nputs array.size\n\nclass Array\n  def size\n    \"Hello\"\n  end\nend\n\n# will now print out \"Hello\"\nputs array.size\n\nDon’t to that, though! It will most likely break your program and is a bad practice overall.\nLast but not least, Ruby has some powerful ways of handling unexpected function calls, such as the method_missing callback:\narray = [1, 2, 3]\n\nclass Array\n  def method_missing(method, *args)\n    puts \"#{method} method not found\"\n\n    if method == :sise then\n      puts \"Did you intend to type size instead?\"\n    end\n  end\nend\n\nputs array.sise\n\nOverall, these abilities were a big game-changer for me when I first learned about them. It enabled me to think about my codebase in a whole new different way and improve it in the process.\nThere were some issues, though. You know what they say: with great power comes great responsibility.\nSeveral Ruby libraries used and abused these metaprogramming mechanisms to create their own Domain Specific Languages. In the long run, this overuse would result in similar problems as we had in C++ times: difficulty maintaining and understanding a codebase.\nElixir took, in my opinion, yet another step forward in the right direction here…\nElixir ❤️#\nHere, metaprogramming is built into the language’s core in a much more powerful way. Whereas Ruby allowed you to define methods dynamically, or event generate a string and evaluate it as code (the old eval method that we all hate), Elixir allows you to mess with the Abstract Syntax Tree (AST) itself.\nThis is done through the quote keyword:\niex&gt; expr = quote do\n  \"Hello, \" &lt;&gt; \"World\"\nend\n\nTrying out the above code, you’ll find that the string concat operation doesn’t get executed directly. Instead of a final string, you end up with an AST expression that describes your code:\n{:&lt;&gt;, [context: Elixir, import: Kernel], [\"Hello, \", \"World\"]}\n\nThose familiar with Polish Notation may quickly identify that this is equivalent to the string concatenation code from above. So by quoting some code, you get an AST description of that code, which you can then use across the rest of your codebase.\nYou can then start to reason about your code as if it were a data structure (which it is… an AST), and perform operations to transform it:\nLet’s modify things a little bit:\niex&gt; expr = quote do\n  \"Hello, \" &lt;&gt; name\nend\n\nNow our expression uses a dynamic name instead. However, where does that name come from? We don’t have that variable defined anywhere, but it is still syntactically correct:\n{:&lt;&gt;, [context: Elixir, import: Kernel], [\"Hello, \", {:name, [], Elixir}]}\n\nHowever, it will fail to execute, which we can test by using Code.eval_quoted/3:\niex&gt; Code.eval_quoted(expr)\n** (CompileError) nofile:1: undefined function name/0\n    (elixir) lib/code.ex:590: Code.eval_quoted/3\n    test.ex:5: (file)\n\nLet’s now create a second AST definition:\ndefinition = quote do\n  name = \"Miguel\"\nend\n\nThis second expression definition defines a variable called name. However, remember, we’re not defining any value, just creating the AST for that operation.\nWe can combine these two expressions into a single one:\nfinal_code = quote do\n  unquote(definition)\n  unquote(expr)\nend\n\nThis ends up having the same result as if we had typed:\nname = \"Miguel\"\n\"Hello, \" &lt;&gt; name\n\nHowever, notice we never had to abandon the Elixir syntax and rules while doing so. We’re writing Elixir that writes Elixir!\nThis is heavily used internally within Elixir’s core. Whenever you define a function, or a simple if statement, you’re executing macros that change the code’s AST according to fit your code into them. Speaking of which…\nElixir’s Macros#\nMuch of Elixir’s features are written with macros. Many of the common operators you use can be rewritten with macros. Let’s take, for instance, the unless operator (which already exists in the language’s core) and define it ourselves:\ndefmodule Foo do\n  defmacro custom_unless(condition, do: do_clause, else: else_clause) do quote do\n      if !unquote(condition) do\n        unquote(do_clause)\n      else\n        unquote(else_clause)\n      end\n    end\n  end\n\n  defmacro custom_unless(condition, do: do_clause) do\n    quote do\n      Foo.custom_unless(unquote(condition), do: unquote(do_clause), else: nil)\n    end\n  end\nend\n\ndefmodule Bar do\n  require Foo\n\n  Foo.custom_unless true, do: IO.puts(\"not true\"), else: IO.puts(\"true\")\nend\n\nOur custom_unless macro take in a boolean value. Inside, we check for the opposite of the condition (we run whatever code AST was given on that condition, and invert the resulting boolean). Then we execute the AST given for either the do or the else clause, depending on the result.\nHowever, the fun part about Elixir is that, since even the basic constructs such as if clauses are often built using macros themselves, we can better embed our macros in the language. In other words, after defining our macro, this is also working Elixir code:\ndefmodule Bar\n  # importing instead of requiring allows us to call the macro directly,\n  # without the Foo. prefix\n  import Foo\n\n  custom_unless true do\n    IO.puts(\"not true\")\n  else\n    IO.puts(\"true\")\n  end\nend\n\nThis works because the interpretation of a multiline if/else block in Elixir is not much more than syntactic sugar for:\nif condition do: something, else: something_else\n\nConclusion#\nHopefully, this has been a useful walkthrough of how macros evolved in the past, especially for Elixir developers that may not know the full power of their language, as well as the history.\n","id":"https://naps62.com/posts/metaprogramming-from-c-to-elixir/","title":"Metaprogramming: From C Preprocessing to Elixir Macros"},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"body":"With recent advances in front end technologies, front end developers have been going crazy, pushing CSS to its limits and doing all sorts of beautiful animations. Seriously, there are some crazy things out there.\nI recently did this 3D animated atom in which I had to employ a couple of weird techniques which I'll try to explain here.\nSee the Pen Subvisual - Animated Atom by Miguel Palhas (@naps62) on CodePen.\n\nI'll be using indented Sass syntax in the examples.\nTransforms basics#\nLet's start from the very bottom. There are 4 basic geometric transformations you can apply to a DOM element using the transform property: Translation, Rotation, Skew and Scaling\n.Square--translate\n  transform: translate(30px, 20px) // x and y axis\n\n.Square--rotated\n  transform: rotate(45deg)\n\n.Square--skewed\n  transform: skew(20deg)\n\n.Square--scale\n  transform: scale(0.5, 0.5)\n\nSee the Pen Subvisual - Atom Post - Step 1 by Miguel Palhas (@naps62) on CodePen.\n\nYou can also combine multiple transformations in a single rule, like so:\n.element\n  transform: translate(50px) rotate(90deg)\n\nHowever, keep in mind that order is important here. So these two transforms are different:\n.Square--translateThenRotate\n  transform: translateX(30px) rotateZ(45deg)\n\n.Square--rotateThenTranslate\n  transform: rotateZ(45deg) translateX(30px)\n\nSee the Pen Subvisual - Atom Post - Step 2 by Miguel Palhas (@naps62) on CodePen.\n\nEach transform operation gets stacked on top of the previous ones.\nSo translating an element after it has been rotated (as in the Square--rotateThenTranslate class) will actually change the direction it moves in. Both squares above are moving to the right. But it's their right, not your's.\nNotice as well that I'm using another variant of the transforms, translateX and rotateZ, to specify the axis to which I want to apply it.\nAnimations#\nAnother cool thing about CSS is that you can animate almost anything:\n.Square--rotateThenTranslate\n  animation: rotate 2s infinite linear\n\n@keyframes rotate\n  0%\n    transform: rotateZ(0deg) translateX(30px)\n  100%\n    transform: rotateZ(360deg) translateX(30px)\n\nSee the Pen Subvisual - Atom Post - Step 3 by Miguel Palhas (@naps62) on CodePen.\n\nBuilding an atom, one orbit at a time#\nSo now we've gone through the basics of what is needed to build an animation like that atom at the beginning. Let's take that last example and style it a bit to look like an electron in orbit. Here's the gist of the changes:\n$Orbit-radius: 100px\n$Electron-radius: 10px\n\n@mixin circle($radius)\n  border-radius: 50%\n  width: $radius\n  height: $radius\n\n.Orbit\n  @include circle($Atom-radius)\n  position: absolute\n\n.Electron\n  @include circle($Electron-radius)\n  position: relative\n  top: $Atom-radius - $Electron-radius\n  left: $Atom-radius - $Electron-radius\n  animation: rotate 2s infinite linear\n\n@keyframes rotate\n  0%\n    transform: rotateZ(0deg) translateX($Atom-radius)\n  100%\n    transform: rotateZ(360deg) translateX($Atom-radius)\n\nSee the Pen Subvisual - Atom Post - Step 4 by Miguel Palhas (@naps62) on CodePen.\n\nPositioning the Orbit#\nOur orbit is currently flat. But we want to give it a three-dimensional look. It should look like a sphere, not a circle. From the user's perspective, each orbit should actually look like an ellipse.\nA naive way to simulate this would be to use an actual ellipse instead of a circle. But what would happen to the animation if we animated through an ellipse instead of a circle? Well, 2 main problems come to mind:\n\nRotating an element around an ellipsis is not possible in CSS (or at least, it's impractically hard). You'd have to use an SVG path, or another more complex solution\nEven if you manage that, the animation speed would look unnatural.\n\nBut don't take my word for it, have a look:\nSee the Pen Subvisual - Atom post - Step 5 by Miguel Palhas (@naps62) on CodePen.\n\nSee how the movement affects your perception? You don't really perceive that as a rotated circle. It's just a flat ellipse, with no three-dimensional feel.\nA more correct way to do this would be to use an actual circle, and rotate it:\n.Orbit\n  transform: rotateY(60deg)\n\nSee the Pen Subvisual - Atom Post - Step 6 by Miguel Palhas (@naps62) on CodePen.\n\nSee the problem there? The electron inherited the rotation, which makes it looked twisted as well. That's the one thing we need to fix now.\nUPDATE: I later noticed that Firefox has even bigger problems rendering this last example. The specific problem I'm mentioning can be seen on Google Chrome\nTransform inheritance#\nWhat happened to the electron is usually the desired behaviour. Transforms are inherited by an element's children. But that's not really what we want here, since we need the electron to look round all the time, which means it has to be facing forward again.\nA useful trick to do here is to apply a transformation to the child which is the exact reverse of all previous transformations.\nThis works because the transforms will negate each other, and the child element will look just like it did before.\nHere's a simple example of how to do this:\n.parent\n  transform: rotateX(45deg) translateX(50px)\n  transform-style: preserve-3d\n  .child\n    transform: translateX(-50px) rotateX(-45deg)\n\nNotice that we need to apply the operations in reverse order as well. Think of it as a stack of operations. The translateX was the last one to be applied, so it needs to be the first one to revert.\nThat transform-style property is required on the parent, to ensure 3d transformations are propagated correctly to children elements. You can learn a bit more about it (here)]https://css-tricks.com/almanac/properties/t/transform-style/]\nFixing the child element#\nFor our atom however, things get messier, because we're already applying a transform to the element itself (and we're also animating that transform!). That needs to be undone as well.\nThe current state of our transforms (at the first animation frame) is:\n.Orbit\n  transform: rotateY(60deg)\n  .Electron\n    transform: rotateZ(0deg) translateX(50px)\n\nSo the full transformation applied to the electron is:\n1. rotateY(60deg)\n2. rotateZ(0deg)\n3. translateX(50px)\n\nThis is essentially bringing the electron from the center to its starting position in the orbit. We want to keep it in that position, but rotate it back to the initial angle.\nSo we're only interested in reverting the rotations, which leaves us with:\n1. rotateY(60deg)\n2. rotateZ(0deg)\n3. translateX(50px)\n4. rotateZ(-0deg)   // revert (2)\n5. rotateY(-60deg)  // revert (1)\n\nThe end result is much closer to our goal:\nSee the Pen Subvisual - Atom Post - Step 7 by Miguel Palhas (@naps62) on CodePen.\n\nYou can play around with the editor of the sample above to get a better feeling of what's happening.\nLayering Issues#\nOne other issue you may have noticed is that our electrons are now clipping through the orbit line. The solution for that is to move the orbits to a background layer somehow.\nI first tried to use z-index for this, but that doesn't really play well with 3D transforms, and absolutely positioned elements.\nIn the end, I created a duplicate of each orbit, and moved them to the background using yet another translateZ. You can check the final animation for the solution, but here's the general idea:\n/* this orbit is visible, but has no electron inside*/\n.Orbit.Orbit--background.Orbit--visible\n\n/* this one is on the foreground, and with an atom\n   but the orbit line itself is hidden */\n.Orbit.Orbit--foreground.Orbit--invisible\n  .Electron\n\nWrapping up#\nThe core part is done. After getting a single orbit to work as we did, there's only a few things left:\n\nAdd new orbits, each one rotated to a different angle, forming a sphere\nStyle everything as needed. After all this transformation non-sense, that shouldn't be too hard\n\nIn the end, the final code ended up a bit more complex than what's shown here, but the principles still hold true. You can check the final version here.\n","id":"https://naps62.com/posts/perfecting-a-css-3d-animation/","title":"Perfecting a CSS 3D Animation"},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"body":"Note: This post was originally written on AppSignal's Elixir Alchemy Blog\nElixir has several mechanisms that allow us to write expressive and intuitive code. Pattern matching, for instance, is a powerful way of dealing with multiple scenarios without having to go into complicated branching. It allows each of our functions to be clear and concise.\nWhat Are Protocols?#\nIn a way, Protocols are similar to pattern matching, but they allow us to write more meaningful and context-specific code based on the datatype we’re dealing with.\nLet’s take the example of a content-delivery website. This website has multiple types of content: audio clips, videos, texts, and whatever else you can think of.\nEach of these content types obviously has different attributes and metadata, so it makes sense for them to be represented by independent structs:\nTranslating this into Elixir, you’d have the following structures:\ndefmodule Content.Audio do\n  defstruct [:title, :album, :artist, :duration, :bitrate, :file]\nend\n\ndefmodule Content.Video do\n  defstruct [:title, :cast, :release_date, :duration, :resolution, :file]\nend\n\ndefmodule Content.Text do\n  defstruct [:title, :author, :word_count, :chapter_count, :format, :file]\nend\n\nEach of these types has a few different fields, most of them unique to the type. We also have a common :file field which will point to the file keeping the actual data.\nNow, let’s say you want to make your content as accessible as possible. You may, for instance, want to allow your hearing-impaired users to view the transcripts of both your audio and video. For that, you’ll use your awesome AudioTranscriber and VideoTranscriber modules which provide transcribe_audio/1 and transcribe_video/1 functions, respectively.\nThe implementation of those functions uses state-of-the-art machine learning and will be delegated to a future blog post. Let’s just assume they work and roll with it.\nBoth transcriber modules are split up into separate modules. Aside from having different function names for transcribing content, they might be completely different libraries. To allow us to use both in a transparent manner, we’ll implement a protocol named Content.Transcribe that has a unified API that can handle both types of content.\nImplementing the Protocol#\nUsing protocols, we can easily define what the act of transcribing something means to each of our data types. This is done by first defining a transcribing protocol:\ndefprotocol Content.Transcribe do\n  def transcribe(content)\nend\n\nand then implementing it separately for each of our types:\ndefimpl Content.Transcribe, for: Content.Video do\n  def transcribe(video), do: VideoTranscriber.transcribe_video(video.file)\nend\n\ndefimpl Content.Transcribe, for: Content.Audio do\n  def transcribe(audio), do: AudioTranscriber.transcribe_audio(audio.file)\nend\n\ndefimpl Content.Transcribe, for: Content.Text do\n  def transcribe(text), do: File.read(text.file)\nend\n\nWe have separately defined implementations of the same function for all 3 content types.\nYou may note that for text content, the implementation merely reads the corresponding file, as it’s already in text format, while for the other two, we call the corresponding machine-learning-magic function on the file.\nWe’re then able to call transcribe/1 for all the data types we have an implementation for:\niex&gt; %Content.Video{...} |&gt; Content.Transcribe.transcribe()\n{:ok, \"We're no strangers to love\\nYou know the rules and so do I...\"}\n\niex&gt; %Content.Audio{...} |&gt; Content.Transcribe.transcribe()\n{:ok, \"Imagine there's no heaven\\nIt's easy if you try...\"}\n\niex&gt; %Content.Text{...} |&gt; Content.Transcribe.transcribe()\n{:ok, \"in a hole in the ground there lived a hobbit...\"}\n\nFallback Implementations#\nNow, let’s say we add a new type of media to our platform: games\nWhat happens when we try to transcribe the newly-added content?\niex&gt; %Content.Game{...} |&gt; Content.Transcribe.transcribe()\n** (Protocol.UndefinedError) protocol Content.Transcribe is not implemented for %Content.Game{...}. This protocol is implemented for: Content.Audio, Content.Text, Content.Video\n\nWhoops! We’ve hit an error. Which makes sense. We didn’t provide any transcription implementation for this type.\nBut it doesn’t really make sense to do so, does it? Games are supposed to be interactive experiences, and there simply may be no way to make them accessible to everyone.\nSo we could just provide an implementation that always fails:\ndefimpl Content.Transcribe, for: Content.Game do\n  def transcribe(game), do: {:error, \"not supported\"}\nend\n\nBut this doesn’t seem very scalable, does it? If we keep adding new content types, we’ll end up having to duplicate this for every single type that we cannot transcribe.\nInstead, we can simply add a fallback implementation for any type we don’t specify. This is done precisely by providing an implementation for the Any type, and then stating in our protocol that we want to fall back to it when necessary.\ndefimpl Content.Transcribe, for: Any do\n  def transcribe(_), do: {:error, \"not supported\"}\nend\n\ndefprotocol Content.Transcribe do\n  @fallback_to_any true\n  def transcribe(content)\nend\n\nThe implementation for Any can usually be used by asking Elixir to automatically derive implementations from it (you can read more about this in the official Elixir Getting Started guide).\nBut by adding @fallback_to_any true to our protocol, we’re stating that whenever a specific implementation is not found, the Any implementation should be used. This allows us to fail gracefully for any unsupported data type:\niex&gt; %Content.Game{...} |&gt; Content.Transcribe.transcribe()\n{:error, \"not supported\"}\n\niex&gt; %{key: :value} |&gt; Content.Transcribe.transcribe()\n{:error, \"not supported\"}\n\nFailed Gracefully#\nCan we close off any better than with a graceful fail? We’ll leave you now that we’ve experimented with protocols and we gracefully haven’t broken any alembic today.\n","id":"https://naps62.com/posts/pouring-protocols-in-elixir/","title":"Pouring Protocols in Elixir"},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"body":"Note: This post was originally written on AppSignal's Elixir Alchemy Blog\nUmbrella apps are an awesome way to structure Elixir projects.\nBehind the curtains, they are a very thin layer that just compiles everything to a single package. Instead of building a single large monolith, you can structure your code with multiple isolated contexts. They all get compiled and run under the same BEAM instance, so they still have access to each other. Meanwhile the conceptual separation ensures you have separate OTP apps for each of your umbrella children. And it allows you to work on each of them with a certain degree of isolation.\nThink of this as a poor man’s microservices solution. You don’t need to add a messaging queue or send HTTP requests between each service since they’re all actually running under the same process, but you still get some of the benefits.\nIf you want to know more about umbrella applications, I suggest the official guide as a starter, as it clearly outlines the advantages and caveats of umbrella apps.\nNow let’s look at a real life example where I’ve implemented an umbrella app.\nA Real Example#\nLet’s say I’m building a website for Magic: The Gathering (MTG) cards. Which… well, I am. The idea is to create an interface where users can browse and search a database of cards. There’s also an admin panel where some administrative tasks can be performed.\nClearly, each of these frontend interfaces has different requirements:\n\nThe main frontend is public while the admin side only has private access.\nThe admin panel may even have its own UI requirements. In this case, I’m using ex_admin for convenience. This means, even UI assets are not shared.\nThey mostly have completely different back-end logic as well. Only a small subset of the queries and operations can be shared between the two.\nI may also want to access both of them through different URLs (e.g. use an admin subdomain for the Admin frontend).\nThe multiple differences between the two make it clear that it would be better for these to be two separate phoenix apps—each with its own setup.\n\nSomething like this:\napps/\n  client/\n  admin/\n  shared/\n\nLooks Easy Enough. What’s the Issue?#\nThe problem comes when you try to figure out how to actually implement this. How do you route requests from the admin subdomain to another Phoenix app while routing other requests to the main Phoenix app?\nOne solution would be to run each of those apps on a different port. But then, you’ll either be left accessing admin.mydomain.com:4001, or you’ll need some other middle layer to abstract away that port distinction from your browser. While this may be fine for an admin page that only you will access, it doesn’t work as well for a general solution.\nThe old school solution is to put a reverse proxy between your clients and your server. nginx does this job pretty well. But in reality, you know all this is a single Elixir application. It seems weird to need a third party server to be able to route requests to different parts of it.\nIt also doesn’t solve the problem of local development, unless you want to run nginx locally as well, which is less than ideal.\nWe’re Elixir developers after all, and we’re pretty smart. So let’s do this the Elixir way:\nIntroducing a Proxy App#\nThe solution I came up with (i.e. read suggestions from similar use cases on Stack Overflow) was to create an additional umbrella child, which will be the main point of contact to the outside world.\nThis app, which we’ll call proxy, will receive all incoming HTTP requests and forward them to the appropriate Phoenix app, based on a few simples rules. In our simple use case, requests to admin.mydomain.com will be forwarded to the admin app, and all others will be forwarded to the client app.\nThis is a very simple phoenix app, which you can generate with mix phx.new like all the others. Dependencies will be kept to a minimum here. We only have phoenix &amp; cowboy as external dependencies (to set up our web server), as well as the client and admin apps to which we’ll be forwarding requests:\ndef deps do\n  [\n    {:client, in_umbrella: true},\n    {:admin, in_umbrella: true},\n    {:phoenix, \"~&gt; 1.3.2\"},\n    {:cowboy, \"~&gt; 1.0\"}\n  ]\nend\n\nSince this app will be the actual web server, we should disable the server setting in the other two:\n# apps/client/config/config.exs\nconfig :client, Client.Web.Endpoint, server: false\n\n# apps/admin/config/config.exs\nconfig :admin, Admin.Web.Endpoint, server: false\n\n# apps/proxy/config/config.exs\nconfig :proxy, Proxy.Endpoint, server: true\n\nThis ensures that only the proxy app will be listening to a port. This is not mandatory but it saves you the trouble of having to define different ports for each one (remember: only one listener per port is allowed) and ensures all requests actually go through the proxy app—which is indeed the expected behavior.\nLeaving server: true might be useful in development or testing mode, depending on how you want to set up your environment.\nSetting up the Endpoint#\nThe entry point of a Phoenix app is the Endpoint module. In this case, we’ve set this to Proxy.Endpoint. Since this app really has no other responsibility, there’s no need to nest it under the Web module, as is common practice in Phoenix.\nHowever, we can strip down most things from the Endpoint module created for us by the Phoenix generator and end up with a very simple module:\ndefmodule Proxy.Endpoint do\n  use Phoenix.Endpoint, otp_app: :proxy\n\n  @base_host_regex ~r|\\.?mydomain.*$|\n  @subdomains %{\n    \"admin\" =&gt; Admin.Web.Endpoint,\n    \"client\" =&gt; Client.Web.Endpoint\n  }\n  @default_host Client.Web.Endpoint\n\n  def init(opts), do: opts\n\n  def call(conn, _) do\n    with subdomain &lt;- String.replace(host, @base_host_regex, \"\"),\n         endpoint &lt;- Map.get(@subdomains, subdomain, @default_host) do\n      endpoint.call(conn, endpoint.init())\n    end\n  end\nend\n\nLet’s go over this one step at a time:\n@base_host_regex ~r|\\.?mydomain.*$|\n\nThis is used to extract the subdomain part of the host URL of every request. So for admin.mydomain.com we want to get the string admin and for mydomain.com we will end up with an empty string (meaning, we’ll forward this to the default app. More on that later).\nNotice that this doesn’t exactly match the .com part. This is a convenience change I made for local development. Matching on mydomain.* allows me to use admin.mydomain.lvh.me when working on my local machine, and still have this whole logic working without making development-specific changes.\nIf you don’t know what lvh.me is, this article might be helpful (TL;DR: It’s a development service that resolves its name to localhost).\nWith the above regex in mind, the next part should be easy to understand:\n@subdomains %{\n    \"admin\" =&gt; Admin.Web.Endpoint,\n    \"client\" =&gt; Client.Web.Endpoint\n}\n@default_host Client.Web.Endpoint\n\nFor every subdomain, we want to match a particular Phoenix endpoint belonging to the app that we want to forward the request to. @default_host is what we’ll use if the subdomain is missing (the empty string scenario we talked above).\ndef call(conn, _) do\n    with subdomain &lt;- String.replace(host, @base_host_regex, \"\"),\n         endpoint &lt;- Map.get(@subdomains, subdomain, @default_host) do\n      endpoint.call(conn, endpoint.init())\n    end\nend\n\nWhen this endpoint—which is actually not much more than an Elixir Plug—is called, we just grab the subdomain from the request host, then find the matching endpoint from our mapping (defaulting to @default_host), and call endpoint.call/2 on it. This is essentially delegating the call down to the appropriate app.\nNow client and admin both have to only worry about their corresponding requests and authentication. All logic related to the multiple subdomains &amp; clients we may need is abstracted away in this app.\nWant a new client in the same umbrella? Add it here! Want the same endpoint to respond to additional subdomains? Add it here!\nTaking the routing even further#\nBy adding a smart router to our umbrella application, we’re now able to serve requests to different subdomains to different apps in our umbrella application. I first implemented this pattern on a pet project of mine, but have since used and improved it on a few production projects as well.\nWe could take this much further. For example, if you’re migrating an existing service from Ruby to Elixir. You can have this proxy application route all requests made to the Ruby version of your service redirected back to the Ruby application, ensuring backward-compatibility. Or you may want the opposite scenario, where you’re creating a new API service and want to forward matching requests to a different client or even to a different web server altogether.\nWe can also take the routing complexity to another level. Routing was done here based solely on the subdomain of the request. But depending on your needs, you can create more complex routing rules using HTTP headers or query parameters. All of this can be done while keeping your actual web services completely oblivious to it.\n","id":"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/","title":"Routing in Phoenix Umbrella Apps"},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"body":"I have lately run into a problem with my editor of choice, vim (well, actually, it's neovim), and the syntax highlighting in Ruby files.\nParticularly, I ran into problems with the Heredoc syntax.\nWhat is heredoc?#\nLong story short, it's a feature present in many programming languages that lets you write multiline strings without all the hassle of dealing with quoting issues, newline characters, etc. Here's an example:\nputs &lt;&lt;HEREDOC\n  a heredoc block can contain anything\n  \"even quotes.\"\nHEREDOC\n\n## output:\n  a heredoc block can contain anything\n  \"even quotes.\"\n\nInstead of the placeholder HEREDOC, you can write any other name, as long as both ends match.\nRuby 2.3 also introduced the squiggly heredoc syntax, which strips off the indentation in every line, allowing you to keep your code indented without messing up the output, similar to rails' strip_heredoc method. But I'll let Avdi Grimm explain that in his own blog post.\nHeredoc syntax in vim#\nGetting back to the subject, Ruby has 3 three different heredoc syntaxes. They're mostly similar, but have slight differences:\n\nAs you can see from the screenshot, at the time of writing, my vim setup has yet to recognize the new squiggly heredoc syntax, which is what prompted me to look for a fix.\nI ended up finding a way to not only properly highlight the new syntax but also provide some powerful syntax highlighting to the heredoc content's themselves:\n## ~/.vim/after/syntax/ruby.vim\n\nlet s:bcs = b:current_syntax\nunlet b:current_syntax\nsyntax include @SQL syntax/sql.vim\nlet b:current_syntax = s:bcs\n\nsyntax region hereDocText    matchgroup=Statement start=+&lt;&lt;[-~.]*\\z([A-Z]\\+\\)+ end=+^\\s*\\z1+ contains=NONE\n\nsyntax region hereDocDashSQL matchgroup=Statement start=+&lt;&lt;[-~.]*\\z(SQLDOC\\)+  end=+^\\s*\\z1+ contains=@SQL\n\nPlace the above code in ~/.vim/after/syntax/ruby.vim, and you'll be able to do the following:\n\nThe vim code did two things:\n\nTold vim to match all heredoc syntaxes (using an appropriate RegEx), and use no highlight within it.;\nWhen the heredoc keyword is SQLDOC, the inner text is highlighted as SQL code.\n\nThe same principle can be applied to create keywords for any syntax supported by vim. Here's an example for both SQL and Shell Scripting:\nlet s:bcs = b:current_syntax\nunlet b:current_syntax\nsyntax include @SQL syntax/sql.vim\n\n\" this unlet instruction is needed\n\" before we load each new syntax\nunlet b:current_syntax\nsyntax include @SHELL syntax/sh.vim\n\nlet b:current_syntax = s:bcs\n\nsyntax region hereDocText    matchgroup=Statement start=+&lt;&lt;[-~.]*\\z([A-Z]\\+\\)+ end=+^\\s*\\z1+ contains=NONE\n\nsyntax region hereDocDashSQL matchgroup=Statement start=+&lt;&lt;[-~.]*\\z(SQLDOC\\)+  end=+^\\s*\\z1+ contains=@SQL\n\nsyntax region hereDocDashShell matchgroup=Statement start=+&lt;&lt;[-~.]*\\z(SHELLDOC\\)+  end=+^\\s*\\z1+ contains=@SHELL\n\nThe only caveat here is that you're forced to use a keyword that matches the syntax you want, and the fact that your coworkers won't see any changes unless they also use Vim and apply this patch as well.\nThat being said, I believe it is still a very useful change nonetheless, and a great example of the capabilities of Vim.\nMore Ruby goodness#\nIf you've enjoyed this bit of knowledge you should really subscribe to our newsletter, where this and other great articles from the Web are shared every week.\nIf you want to meet us and/or see some talks on Ruby topics, come join us at RubyConf Portugal 2016. For making all the way to the end of this article you get 25% off the price of the ticket.\n","id":"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/","title":"Smarter heredoc syntax in vim"},"https://naps62.com/posts/super-powered-vim-i-projections/":{"body":"One of my main focus of the past few months has been my productivity with my text editor.\nThis text editor happens to be Vim, but the concepts of this post are applicable to any code-editing tool.\nThe main focus of this 3-part series is to minimise time spent on the boring and repetitive parts of writing code.\nFor now, let's focus on how dull of a task it is to navigate your codebase:\nFilesystems are boring#\nWhen working on a given feature, I'll probably be navigating between 2 or more files at a time. For instance:\n\nWhen working on a model class, I'll probably touch the corresponding test files for that class as well;\nWhen working on a React.js component, it's likely I'll have to touch the corresponding CSS file.\n\nNavigating between these pairs of files might prove slightly difficult, especially if I have to do it several times during the same task. Even a couple of seconds of context switching can amount to a large time at the end of the day.\nUsing a component based approach, where all the files related to a given component or domain are stored next to each other, might alleviate this pain.\nBut for me, that's not necessarily a good solution.\nThe way I move about my code should not be coupled to what the file structure looks like. As developers, we can come up with much more powerful and context-aware methods of finding stuff.\nAnd that's what vim-projectionist is all about.\nDefining projections#\nThere are several useful features within tpope/vim-projectionist. But the killer for me is the ability to define an alternate for each file.\nWith a simple configuration based on the naming of your files, you can create \"pairs\" of files. This can be done with a .projections.json file in your repository:\n{\n  \"app/*.rb\": { \"alternate\": \"spec/{}_spec.rb\" },\n  \"spec/*_spec.rb\": { \"alternate\": \"app/{}.rb\" }\n}\n\nWith this simple mapping, we're defining a rule where for every file in the app directory, there's an alternate file in the spec directory, with a matching name and a trailing _spec.\nThe {} placeholder will be filled with whatever matches the * for each file.\nThis might not be the case 100% of the times, but it matches the conventions normally used for Rails apps, so it's a pretty good approximation.\nThe second projection in the file defines the projection in the opposite direction.\nWith these pairings in place, I can use simple commands to navigate between a file and its corresponding alternate:\n\nI can switch to the alternate file, or open it in a split or tab, with commands such as :A or :AV\nIt's then just a matter of setting up some key maps to make this even easier:\nmap &lt;leader&gt;aa :A&lt;CR&gt;\nmap &lt;leader&gt;av :AV&lt;CR&gt;\n\nThis prevents me from having to think about the directory structure a project is using, and instead focus on actual work.\nSystem wide projections#\nIt's pretty useful to be able to define projections for each individual project. But there might be cases where you'll end up using the same ones over and over. For instance, in a Rails app, you probably want to add a map between code files and spec files to always exist.\nSo we can instead make this a system-wide configuration, by applying it to our vim settings directly.\nAn efficient way to do that is via syntax specific files, so that each set of global projections only gets loaded when needed. Vim-projectionist also provides us with a callback that we can use to lazy-load them only when necessary:\n## ~/.vim/syntax/ruby.vim\n\nautocmd User ProjectionistDetect\n\\ call projectionist#append(getcwd(),\n\\ {\n\\    'app/*.rb': {\n\\      'alternate': 'spec/{}_spec.rb'\n\\    },\n\\    'spec/*_spec.rb': {\n\\      'alternate': 'app/{}.rb'\n\\    },\n\\ })\n\nIt's kind of awkward to define a json schema inline within a VimL file. But hey, it works!\nThese projections are now global, and are loaded only when necessary, whenever I invoke a projectionist method within a Ruby file.\nWhat's next?#\nIn good ol' Hollywood fashion, this post is part of a trilogy. In part II, I'll talk about a different concept - snippets - and how I build my own dynamic snippets for Vim.\nLater, in part III, I'll explain an awesome integration that can be done between vim-projectionist and these snippets, to go even further in the art of not writing code™.\n","id":"https://naps62.com/posts/super-powered-vim-i-projections/","title":"Super-powered Vim, part I: Projections"},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"body":"This post is a follow-up to Super-powered Vim, part I: Projections.\nKeeping the same line of thought of the previous post, about taking the effort out of the boring tasks that come with writing code, let's now talk about a simple yet powerful concept: snippets.\nWriting code is boring#\nOpen up three different code files in your current project. Now look at them, and compare them.\nChances are you'll see a lot of duplication between them. Maybe not the duplication that you can refactor away though. But, and let's assume here we're talking about a Ruby project, you're seeing something along these lines:\n\nAll 3 files have a class or module, named after the path and file they're in;\nFor classes, there might be a constructor that sets up some instance variables;\nYou probably have a corresponding test file somewhere, with the same RSpec boilerplate you use everywhere.\n\nEver thought about not having to write most of this anymore?\nAs I said above, this is all duplicated code. And while we cannot refactor our app to remove that duplication (without coming up with a new programming language, at least), we can surely make our editor do the heavy-lifting for us:\n\nIn the above image, I'm using two snippets created with UltiSnips.\n\nThe first one, invoked with the keyword class creates a Ruby class, naming it after the path and filename where currently editing. The snippet is intelligent enough to know that app/models/my_namespace/a_very_long_class_name.rb should probably hold a MyNamespace::AVeryLongClassName class. This is most likely the desired name for the class (following Ruby conventions) so the snippet goes with it as the default.\nAfterwards, I'm using a defi snippet which sets up a Ruby initializer method. This does even more magic behind the curtains so that as I type new arguments in the method header, these get added as instance variable assignments in the body.\n\nYou can start to see the power of this approach, as with just some small keywords and a shortcut, I can easily insert any kind of boilerplate code.\nBut how?#\nUltiSnips is powered by Python and it has the extremely useful feature of allowing us to introduce actual Python code within the snippets. This code will be evaluated in real time, as we expand and complete snippets. Here's the code for that class snippet I showed earlier:\nsnippet class \"class definition\"\nclass `!p rb_class_name(path, snip)`\n  $0\nend\nendsnippet\n\nThere's a [great series of screencasts] that explains very well how to use UltiSnips, so I won't go into detail here. The only thing worth mentioning is that !p rb_class_name(path, snip) defines a block of Python code.\nrb_class_name is a simple function I defined in a helper file that does the necessary text transformations to the file path (given as argument) to infer the name of the Ruby class.\nWhat's next?#\nThis was all very cool and whatnot, but there are still a few keystrokes we can shave off of this.\nTyping that class snippet and expanding it for every new file will be a bit boring, won't it?\nIn part III, I'll explain how we can integrate vim-projectionist (mentioned in part I) with snippets to go even further in the art of not writing code™.\n","id":"https://naps62.com/posts/super-powered-vim-ii-snippets/","title":"Super-powered Vim, part II: Snippets"},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"body":"This post is the third of a three-part series. If you're interested, you can start by checking out part I and part II.\nWriting code is boring.\nIn the previous parts I showed how we could speed things up a bit, by having some powerful shortcuts for file navigation and inserting repeatable blocks of code (snippets).\nNow, let's see how we can go one step further:\nLet's stick with Ruby as our sample language. The common practice in the community is to have a class or module in each file, with the name matching the file path. So app/models/user.rb will have a class User, and app/models/foo/bar.rb will have a class Foo::Bar.\nSo wouldn't it be pretty cool if, when creating one of these files, it got be pre-populated by that class definition?\nWait... What?#\nIn part II, I already mentioned a class snippet, which creates a Ruby class based on the path of the file.\nNow I want this snippet to be automatically inserted in any new files created in the app directory.\nCould we define some kind of attribute for these paths? Say... a projection?\nLet's take the .projections.json example from part I and expand it a bit:\n{\n  \"app/*.rb\": {\n    \"alternate\": \"spec/{}_spec.rb\",\n    \"skeleton\": \"class\"\n  },\n  \"spec/*_spec.rb\": {\n    \"alternate\": \"app/{}.rb\",\n    \"skeleton\": \"spec\"\n  }\n}\n\nWe now have a skeleton attribute for both app and spec files. class and spec are snippet names, which insert a class definition, and some RSpec boilerplate, respectively.\nNow let's look at some vimscript magic (I know... sorry):\naugroup UltiSnips_custom\n  autocmd!\n  autocmd BufNewFile * silent! call skel#InsertSkeleton()\naugroup END\n\nThis is defining an autogroup (more on what that is here) that listens to the BufNewFile event. This event is called when a buffer is created for a new file (i.e.: a file that is not yet persisted to disk). All of this happens when we do the :edit command for with a non-existing path.\nThat command will then call the skel#InsertSkeleton function (see the code snippet at the end of the post for its definition). In short, the function will:\n\nMake sure the buffer does not exist and is empty (we probably don't want to do anything in these cases)\nLoop through the existing projections, to look for a skeleton key matching the current file path\nIf a skeleton is found, insert the snippet's name, and expand it using the appropriate function from UltiSnips.\n\nFor the example of app/models/foo.rb, this will literally insert the word class into the buffer, and call UltiSnips#ExpandSnippet() for us, creating the class definition.\n\nBut wait, there's more#\nYou just created a Ruby class by simply opening a new file.\nNow you want to write some tests for it, so you use your newly learnt vim-projectionist skills, and type :A (or whatever shortcut you have) to go to it's alternate file, as defined by the projections. This should match to spec/models/foo_spec.rb\nThis file also does not exist, but vim-projectionist is aware of this (see part I for more on this). This will conveniently ask you if you want to create it on the fly.\nOnce you accept to do so, the same events will be triggered, and this time, the spec snippet will be inserted on this file.\nYou can then proceed to writing the interesting part of your app. Or you can take a break, enjoying those 15 seconds of work you just avoided. You deserve it.\nFull code#\nI avoided going through the entire vim code in this post, as that would've been a bit offtopic, and probably hard as well, given how much VimL sucks. All the vimscript code needed to reproduce my setup is right here for those who want it.\nFeel free to reach me out through twitter for any questions you might have, or bugs you might find, or checkout my dotfiles if you want to dig some more useful tips from there.\naugroup UltiSnips_custom\n  autocmd!\n  \" autocmd User ProjectionistActivate silent! call skel#InsertSkeleton()\n  autocmd BufNewFile * silent! call skel#InsertSkeleton()\naugroup END\n\nfunction s:try_insert(skel)\n  execute \"normal! i\" . a:skel . \"\\&lt;C-r&gt;=UltiSnips#ExpandSnippet()\\&lt;CR&gt;\"\n\n  if g:ulti_expand_res == 0\n    silent! undo\n    return\n  endif\n\n  \" enter insert mode and advance cursor (equivalent to typing `a` instead of `i`)\n  execute \"startinsert\"\n  call cursor( line('.'), col('.') + 1)\n\n  return g:ulti_expand_res\nendfunction\n\nfunction! skel#InsertSkeleton() abort\n  let filename = expand('%')\n\n  \" abort on non-empty buffer or exitant file\n  if !(line('$') == 1 &amp;&amp; getline('$') == '') || filereadable(filename)\n    return\n  endif\n\n  if !empty('b:projectionist')\n    \" Loop through projections with 'skeleton' key and try each one until the\n    \" snippet expands\n    for [root, value] in projectionist#query('skeleton')\n      echo value\n      if s:try_insert(value)\n        return\n      endif\n    endfor\n  endif\n\n  call s:try_insert('skel')\nendfunction\n\n\nWhat's next?#\nIf you haven't seen the prequels to this post, maybe now would be a good time to do so?\nCheck out part I and part II for more details on what projections and snippets are, and how to use them!\nOr take a look at another post by one of our developers. Happy coding!\n","id":"https://naps62.com/posts/super-powered-vim-iii-skeletons/","title":"Super-powered Vim, part III: Skeletons"},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"body":"While Elixir is becoming a popular language for web development, there is at least one topic that I still find lacking: Deploys.\nThere are already several options out there, but the community has not yet adopted a standard way to solve this problem, so documentation is not that easy to find or follow.\nSo I decided to compile what I consider to be a good standard for deploying a web application using Elixir &amp; Phoenix in this post. This isn't a one-size-fits-all solution. I would argue that there's no such thing.\nThis is the solution to my particular problem:\n\nThe focus is on development speed and getting something online fast\nYou don't have special infrastructure needs (think Web Server + Database + maybe Redis or a couple of other services)\nYou have a fast development cycle, possibly deploying to production several times every day\n\nThat said, if you have different requirements, this tutorial can be a good starting point to learn how to work with some of the tools, and you might be able to adapt it to your special needs, so don't shy away just now!\nTable of Contents#\n\nElixir Releases\nIsolating the build with docker\nSetting up docker-compose\nDeploying with docker-machine\nRunning Migrations\nFinal thoughts\n\n\nElixir Releases#\nThere are two ways to get your Elixir code running on a server. The first is to push it and run mix phx.server or whichever command your application uses to start itself.\nThe second and most common approach is to build a release package. This is the approach I'll be focusing in here, but if for some reason you prefer the former method, adapting this tutorial shouldn't be hard. It mostly means you get to skip the first step.\nA release is a pre-compiled form of an Elixir/OTP application. It is stripped of anything not necessary for production use, requires almost no dependencies, and can be deployed anywhere (at least in theory, but more on that below).\nThere are a couple of caveats to this approach, though:\n\nYou lose the ability to run mix or other tools, which means that database migrations&nbsp;and other tasks, need to be done in some other way;\nYou need to ensure the system architecture of the machine where the release is compiled matches the architecture of the server it'll run on.\n\nBoth of these issues will be discussed later on in the post.\nHow do I build a release?#\nThere are a couple of tools that make it straightforward to generate releases:\n\ndistillery is currently the recommended project to use;\nexrm is a previous project by the same author. Despite having been replaced by distillery recently, it is still worth mentioning due to its heavy use. It still has it's own page in the Phoenix framework docs, for instance.\n\nI'll be using distillery for this tutorial. However, I won't be using it directly, but via a Docker container, so that I can solve the system architecture problem mentioned above.\n\nIsolating the build with docker#\nThe architectures of the server and the machine where we build our release need to match. So it's easy to see we can run into problems. We shouldn't have to worry about breaking our builds just by using a different computer.\nBuilding directly on the server is an option, of course, but that takes away a lot of flexibility from our hands. It would mean that our server needs all the dependencies necessary to build a release, and will also spend some computing power from our server, which might have noticeable effects, especially if you're on a budget.\nInstead, how about delegating the build process to a Docker container? That way, we ensure consistency, regardless of where we trigger the build. In the docker community, this is usually referred to as the Builder Pattern.\nWe'll have one Docker container to build the release package, and a different one for running it, with only the bare minimum runtime dependencies.\nAnd that's exactly what mix_docker does for us. Out of the box, it includes two different Dockerfile descriptions, which are used to, respectively, build and release your Elixir app. Under the hood, it uses distillery to generate the releases.\nNote: We could also take advantage of Docker's new feature: Multi-stage builds, but mix_docker does not yet support those, so we're going with the two Dockerfile approach for convenience.\nBuilding a Release#\nTo set it up, add mix_docker to your mix.exs , and run mix deps.get . At the time of writing, the released version (0.3.0) does not work with Erlang 19, so I had to fetch the Github repo directly:\ndef deps do\n  [\n    ...\n    {:mix_docker, github: \"Recruitee/mix_docker\"},\n  ]\nend\n\nAnd set it up using:\n$ mix docker.init\n\nThis will setup Distillery as well, creating a rel/config.exs file in your project.\nYou might be interested in checking out Distillery's Configuration options and change that file if you need to.\nNext, to build a release, run:\n$ mix docker.build\n\nThis copies your entire application to a minimal Docker image running Alpine Linux. The image contains only the essential packages to build your application, which is nothing more than an Erlang/Elixir installation.\nReleasing a Release#\nWe now want this build to run on our server. For that, mix_docker provides another docker image and a command:\n$ mix docker.release\n\nAn Elixir release is a self-contained project that requires no dependencies (at least for a simple project, as is the case here), so this second container has nothing more than the same Alpine Linux installation with a couple of system libraries, making it very compact.\nPublishing to Docker Hub#\nNow we have a docker image that runs our app. Everything is contained there, so we just need to get that on a server. I use Docker Hub for that since it integrates nicely with the rest of the Docker toolkit.\nYou need to set up an account and run docker login to connect locally.\nOn the free plan, it allows only one private repository, which fortunately is enough for me. If that doesn't suit your needs, you can look into alternatives, such as hosting your own private Docker Registry.\nKeeping with the Docker Hub approach:\n$ mix docker.publish --tag 0.1.0\n\nSince my docker username is naps62, and considering demo as the name of this particular project, this would upload an image called naps62/demo:0.1.0.\nHaving that out of the way, we still need a few things to make the containerized app work:\n\nSetting up any environment variables that might be necessary;\nAdding a database container as a dependency.\n\nIn the next section, I'll explain how to use Docker Compose to do just that.\n\nSetting up docker-compose#\nCompose is a tool that allows us to define and run a multi-container app, specifying how the networking and dependencies between them should work. Think of it as a low-scale orchestration tool.\nTo use it for our app, we need to create a docker-compose.yml looking like this:\nversion: '2.0'\nservices:\n  web:\n    image: 'naps62/demo:0.1.0'\n    command: foreground\n    depends_on:\n      - db\n    ports:\n      - '4000:4000'\n    environment:\n      DATABASE_URL: 'ecto://demo_db:demo_user@db/demo_db'\n      PORT: 4000\n      POOL_SIZE: 10\n\n  db:\n    image: postgres:9.6.2\n    environment:\n      POSTGRES_DB: 'demo_db'\n      POSTGRES_USER: 'demo_user'\n      POSTGRES_PASSWORD: 'demo_pass'\n\nI won't go through in much detail since there are already a lot of tutorials covering Docker Compose ( exhibit A, exhibit B, exhibit C ). I'll just to go through the relevant parts for this tutorial:\n\nimage: \"naps62/demo:0.1.0\" refers to the image we just built. Notice the tag must be updated if we release a new version. Or alternatively, we can use image: \"naps62/demo:${TAG}\" to get the release tag from an environment variable, making it easier to update it in the future;\ncommand: foreground this is the command to be executed by the docker image. foreground just appends to be the executable included in a docker release to start the app. Other alternatives are available if we need to start it as a background job, but that is not what we need here;\nports: \"4000:4000\" sets the port forwarding to the default port used by the Phoenix server. We'll later add an nginx reverse proxy to redirect requests to this port;\nDATABASE_URL: \"ecto://..\" This sets the full URL for Ecto to connect to our PostgreSQL database, which is running in a separate container. It contains the username, password, and database name;\n\nFor that DATABASE_URL variable to be used, we also need to change our Ecto configs for production:\n## config/prod.exs\n\nconfig :db, Demo.Repo,\n  adapter: Ecto.Adapters.Postgres,\n  url: {:system, \"DATABASE_URL\"},\n  pool_size: 10,\n  ssl: false m\n\nWith this setup, we can get our entire system running with docker-compose up. But we want to do that on a remote server, not locally, so let's dive into that now:\n\nDeploying with Docker Machine#\nDocker Machine is yet another tool in the large Docker ecosystem. It is used to handle docker installations and containers in remote machines without all the hassle of setting up a server manually and ssh 'ing into it.\nIn this case, we'll be using it to create a Digital Ocean droplet (via their API, not manually), and run our app.\nGrab your Digital Ocean token#\nYou'll need to get an API token from your Digital Ocean account so that Docker Machine can have access to it.\nGo to https://cloud.digitalocean.com/settings/api/tokens and create a new token:\n\nNow, copy it to your terminal as an environment variable:\n$ export DIGITAL_OCEAN_TOKEN=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\nBonus: Persist your token with a secrets file#\nTo make this persistent, and prevent you from having to export this variable on every new terminal, you can create a ~/.secrets.sh with the export command, and load it in your .bashrc or .zshrc :\n[ -f ~/.secrets.sh ] &amp;&amp; source ~/.secrets.sh\n\nJust remember not to commit this to your dotfiles repository, if you have one. And, of course, this is only an option if you have enough control over who uses your computer, so tread lightly.\nCreate Droplet#\nCreating a droplet on Digital Ocean can be done with a single Docker Machine command, which will use the Digital Ocean API to do most of the work for us. Let's create a droplet called docker-demo:\n$ docker-machine create --driver=digitalocean --digitalocean-access-token=$DIGITAL_OCEAN_TOKEN --digitalocean-size=512mb docker-demo\n\nThat's it! The new droplet has Docker up and running, and an SSH key was created automatically for you, allowing you to run docker-machine ssh docker-demo to access its shell if needed.\nBut to deploy our app, there's an even easier way.\nRunning Docker Compose remotely#\nDocker Compose supports running containers on remote hosts rather than locally. For this, only a few environment variables are needed to point to the correct host, and Docker Machine also has us covered there:\n$ eval $(docker-machine env docker-demo)\n\nAfter running the above command, our terminal will have set DOCKER_HOST and a couple of other variables, pointing to the droplet we created.\nAnd just like magic, we can now seamlessly start our docker containers on that host:\n$ docker-compose up -d\n\nAll of Compose's commands will work as before, but their effects will happen remotely instead. The -d option ensures the containers are run as a background process, so our app is now fully running. You can run docker-compose ps to see the proof\nOnce you're done, you can either open a new terminal or run eval $(docker-machine env -u) to unset the environment variables and go back to local mode.\nNow our app is running in a remote droplet, but it's not yet accessible to the outside world. Let's fix that with an nginx reverse proxy.\nNginx reverse proxy#\nWe first need to install nginx on the droplet, since it doesn't come pre-installed:\n$ docker-machine ssh docker-demo\nroot@docker-demo:~$ sudo apt-get install nginx\n\nAll that's left is a simple nginx configuration, pointing all requests to port 4000, which we previously exposed in our Compose configuration. Add the following as etc/nginx/sites-enabled/your-website.conf, replacing your-website.com with the actual URL you want to use:\nupstream your-website {\n  server 127.0.0.1:4000;\n}\n\nserver {\n  listen 80;\n  server_name [your-website.com](http://your-website.com) www.your-website.com;\n\n  location / {\n    proxy_pass http://your-website;\n    proxy_redirect off;\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Host $server_name;\n  }\n}\n\nAfter this, run service nginx start to start the process. If you already did the previous docker-compose up -d, then your app should now be accessible. Congratulations!\n\nRunning migrations#\nNow that you successfully deployed an Elixir web app, you need to take care of updates as well. One of the most common maintenance tasks of updating an app is to run database migrations.\nIn development, you usually do this by running mix ecto.migrate , but you might remember that, at the beginning of the post, I mentioned that this is not an option for release builds.&nbsp;The mix interface is not available in production, so we need a different solution.\nFortunately, it is really easy to run migrations programmatically, and both Ecto and Distillery provide us with the necessary tools.\nWith Distillery, we can specify hook scripts that will be executed when our app first starts. And through these scripts, we can make an RPC call to our app, triggering some code that will run the migration.\nRunning migrations programmatically#\nDefine the following module somewhere in your codebase:\ndefmodule Demo.Release.Tasks do\n  def migrate do\n     {:ok, _} = Application.ensure_all_started(:demo)\n\n     path = Application.app_dir(:demo, \"priv/repo/migrations\")\n\n    Ecto.Migrator.run(Demo.Repo, path, :up, all: true)\n  end\nend\n\nThis calls the Ecto API, which goes through your migrations and runs any new ones.\nWe now need to trigger this code to be called when our app is deployed, using a hook that Distillery provides us. Edit the production section of your rel/config.exs file:\n...\n\nenvironment :prod do\n  ...\n\n  # add this line\n  set post_start_hook: \"rel/hooks/post_start\"\n\nThis references a rel/hooks/post_start file, which we will now create. This is actually a regular shell script where we can do whatever we need.\nIn this case, we're going to use RPC to call the Elixir function defined above:\n##!/bin/sh\n\nset +e\n\nwhile true; do\n  nodetool ping\n  EXIT_CODE=$?\n\n  if [ $EXIT_CODE -eq 0 ]; then\n    echo \"Application is up!\"\n    break\n  fi\ndone\n\nset =e\n\necho \"Running migrations\"\nbin/demo rpc Elixir.Release.Tasks migrate\necho \"Migrations run successfully\"\n\nNow every time the app is deployed, our migration task will be called.\nYou can see that this is not tied to database migrations in any way. We can easily add other kinds of tasks to this hook, making it a very generic way of having additional deployment tasks running.\n\nFinal thoughts#\nIf you enjoyed this tutorial, or if you have any questions feel free to reach me out through Twitter or via the comments below.\nOr, if you're ready to take it to the next step, you can also take some hints from our tutorial for building offline web applications.\n","id":"https://naps62.com/posts/tutorial-deploying-elixir-applications/","title":"Tutorial: Deploying Elixir applications with Docker and Digital Ocean"},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"body":"Note: This post was originally written on AppSignal's Elixir Alchemy Blog\nToday2, we will dive into Typespecs and Behaviours. These are two Elixir features that we are ecstatic (pun intended) about. They are great examples of built-in features in Elixir that help get some of the advantages of statically typed code.\nDynamically Typed with Features#\nAlright, let’s set the scene. Elixir is a dynamically typed language. This means that the type of each variable is not checked at compile-time, but rather at run-time. Like most things, this comes with advantages and disadvantages.\nThe differences between statically and dynamically typed languages are sometimes the cause of heated debate, and there’s already a lot of material out there. This post provides a good comparison, and Chris Smith’s article is also a great dive into some of the fallacies that come when discussing type systems.\nDespite being dynamically-typed, Elixir does a pretty good job of providing some opt-in features to get some of the safety of statically typed languages. This is important because those features often provide important guarantees about your code. This is usually done by performing static analysis on your code and, with the help of the type system, catch mistakes early on.\nThe two main examples of this are Typespecs and Behaviours.\nTypespecs#\nTypespecs is an opt-in feature of Elixir that lets you annotate your functions to provide hints to the language as to what your function headers should look like. Like this:\ndefmodule Foo do\n  @spec bar(arg :: binary) :: number\n  def bar(arg) do\n    String.length(arg)\n  end\nend\n\nThe @spec keyword lets you specify what the argument names and types should be, as well as the return type.\nThis doesn’t cause any kind of compilation failure if the types don’t match (again, Elixir is dynamically typed, so the types aren’t actually enforced at compile-time). But it has two other main benefits:\n\nIt allows for other tools to be built, which will perform static analysis on the code, and use these annotations to inform you if something looks wrong. dialyxir is a popular tool for this;\nIt serves as documentation so that anyone looking at your public API can clearly see what to expect.\n\nElixir provides a set of basic types that you can use in these specifications. binary, pid and number are some of them (check the official docs for more on this). But it also allows you to compose these basic types into more complex, custom ones, using the @type directive:\nBehaviours#\nAlright, now we take it to the next level and discuss behaviours. You can think of Behaviours as a kind of interface specification, like what you usually get in object-oriented languages.\nBehaviours allow you to specify a contract for your modules and force them to respond to a specific API. This allows you to decouple features, using adapter patterns and other such programming techniques to piece together your code.\nThe upper layers of an application don’t really need to care if data is persisted into PostgreSQL, MongoDB, or some other database. That’s because Ecto provides a common language (API) to interact with adapters for these storage backends.\nA behaviour specifies a list of function headers, here called callbacks. Any other Elixir module which claims to implement said behaviour will have to define those callbacks and their implementation. If one is missing, a compiler warning will be issued, letting the programmer know something’s wrong.\nAn example behaviour might look something like this:\ndefmodule MyApp.Language do\n  @callback greet(name :: binary) :: binary\n  @callback thank :: binary\nend\n\nThis behaviour defines two function headers. These are defined just like you would a typespec, except that @callback is used, instead of @spec.\nNow we can write some implementations of our language behaviour:\ndefmodule MyApp.English do\n  def greet(name), do: \"Hello, #{name}\"\n  def thank, do: \"Thank you\"\nend\n\ndefmodule MyApp.Portuguese do\n  def greet(_name), do: \"TODO\"\n  def thank, do: \"Obrigado\"\nend\n\ndefmodule MyApp.Japanese do\n  def greet, do: \"TODO\"\n  def thank, do: \"TODO\"\nend\n\nThis last implementation will throw a warning because we’re failing to fulfill the contract. greet should actually take an argument. And even if we don’t use it, we still need to expect it. greet/0 and greet/1 would be two different functions in Elixir, and the behaviour expects the latter.\nwarning: function greet/1 required by behaviour MyApp.Language is not implemented (in module MyApp.Japanese)\n  test.ex:20\n\nNote that this is not a compilation failure, just a warning. These annotations are only meant to guide your development and warn you of potential mistakes. It’s up to you to know what to do with them.\nBut before looking into a real-life example of this, we need to discuss a pattern that is commonly associated with behaviours and interfaces…\nThe Adapter Pattern#\nThe Adapter pattern is a well-known software development pattern, described in detail by the Gang of Four’s book on the subject. In short, it’s about building public interfaces within your code, such that pieces can be swapped with other functionally-equivalent pieces while keeping everything compatible.\nThere are two main benefits to this:\n\nIt promotes decoupling. By enforcing that modules only talk with other modules via the specified interfaces, it doesn’t matter what the underlying implementation is. As long as that part remains stable, inner refactors of your code can be made with a lot more confidence that compatibility won’t be broken\nIt makes it easy to switch between multiple options. Ecto, as mentioned above, is a great example of this. While writing queries with it, you don’t really care if your backend is PostgreSQL, MongoDB, or something else. Ecto’s query language remains the same, and each adapter takes care of translating that to its own language.\n\nAs you may guess by now, the go-to way of creating adapters in Elixir is by using behaviours.\nAn Example Project#\nTo demonstrate the usefulness of behaviours, I’ll take advantage of a real project for which I contributed.\nfun_with_flags is an awesome Elixir library for dealing with feature flags. It’s also one of the better-named projects out there\nWithin my projects, I often felt the need to make feature flags known to my unit tests. Perhaps I’m writing tests to a disabled feature that hasn’t gone live yet, and therefore need to enable it in those tests, to trigger the correct code paths. Or perhaps I want to test how the program responds to different flag values (e.g.: rolling releases).\nEither way, I want the ability to enable/disable flags in tests. But the two existing adapters pose limitations to this. Spinning a Redis instance for my test suite seems too much. And using PostgreSQL would require setting up Ecto Sandbox, and giving up on async: true completely for any related tests.\nThe ideal scenario was to have all this run in memory. Which we can, thanks to the adapter pattern that was chosen.\nAn InMemory Adapter#\nAnd here we go. Everything folded together.\nThe bulk of the work is to create a module that implements the FunWithFlags.Store.Persistent behaviour. All functions listed in the behaviour (worker_spec/0, get/1, put/1, delete/1, all_flags/0 and all_flag_names/1) need to be implemented in our adapter.\ndefmodule FunWithFlags.Store.Persistent.InMemory do\n  @behaviour FunWithFlags.Store.Persistent\n  # ...\n\n  def start_link(opts \\\\ []) do\n    GenServer.start_link(__MODULE__, opts, name: opts: __MODULE__)\n  end\n\n  def init(_), do: {:ok, []}\n\n  def get(flag_name) do\n    GenServer.call(__MODULE__, {:get, flag_name})\n  end\n\n  def put(flag_name, gate) do\n    GenServer.call(__MODULE__, {:put, flag_name, gate})\n  end\n\n  # ...\n\n  def handle_call({:get, flag_name}, _from, state) do\n    # ...\n    # search for the given flag in the state, and return it's status\n  end\n\n  def handle_call({:put, flag_name, gate}, _from, state) do\n    # ...\n    # insert the given gate into the current state\n  end\n\n  # ...\nend\n\nThis part of the implementation shows how the get/1 and put/1 functions are hooked up. The module is a GenServer to allow it to store and retrieve data without having to persist it to a database.\nNote that I avoided displaying the actual implementation of the various handle_call/3 functions because they’re rather bulky and already beside the point of this post. But the good news is, this is actually published as a hex package, and you can check it out on Github too!\nSummary#\nNow we’ve gone all the way into the rabbit hole of this post, from theory to practice. From TypeSpecs, and how behaviours are a cool implementation of Adapter patterns in Elixir to the real-life example. We even got out at the other end on our best behaviour ;-)\n","id":"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/","title":"Typespecs and Behaviours in Elixir"},"https://naps62.com/posts/understanding-elixir-genstage/":{"body":"Note: This post was originally written on AppSignal's Elixir Alchemy Blog\nIn this post, we’ll dive into Elixir’s GenStage module. Along the way, we’ll explain backpressure and we’ll write a Genstage to query the blockchain. Let’s start by discussing how using a GenStage can solve buffering problems.\nWhat Is a GenStage?#\nImagine you’re consuming data from an external source. That source could be anything “streamable” - such as reading a file line-by-line, a table in a database, or even a sequence of requests to a 3rd party API.\nIn such scenarios, where you need to stream data into your system, and probably do some processing on each data point, it’s common to use a buffer to read in a few items, process the whole batch, and then fetch a new set into the buffer. I remember, from the time I was learning C/C++, that this would be a common, although arguably naive way to do things.\nWith that approach, you may run into one of two problems: the buffer can get too small, or the buffer van get too large.\n\nBuffer Too Small This happens if you read too few items at a time. Since you’re switching back and forth between reading and processing items, there will be a performance cost from the task switching. In the example of reading a file, your hardware or Operating System may be reading more data than what you’re actually requesting, resulting in sub-optimal performance, in addition to having to fetch the same part of the file later on.\nBuffer Too Large In this case, you request too much from your data source. You may end up either creating a bottleneck (e.g. having to wait for your hard drive to read everything you requested), or not being able to process all the data in an efficient manner. If you’ve ever heard of a buffer overflow (a common performance and security concern), this is it. You’re reading more than what your system can keep up with, resulting in all kinds of problems, from performance to actual failures.\n\nThe Solution: Backpressure#\nThe term backpressure refers to the behavior of a system that builds up input, then halts the receiving of new data once the buffer is full, resuming it once again when the system is ready to handle it.\nThis is the core idea behind Elixir’s GenStage.\nGenStage#\nGenStage is an abstraction built on top of GenServer to provide a simple way to create a Producer/Consumer architecture, while automatically managing the concept of backpressure.\nIn a GenStage, you create a pipeline of multiple Producers &amp; Consumers. Producers generate data points, or read them from a source, and then pass them down to the pipeline. They can then be sent through one or more Consumers that will do whatever processing you need done.\nThe idea of backpressure is applied in the way items are created in a Producer. When the pipeline is ready to receive new items, the handle_demand/2 function of the Producer is called, requesting a specific amount of items.\nThe amount requested is decided internally (although you can specify a maximum value), and the function is called whenever there is room for them in the pipeline. If items take too long to process, Producers end up being idle for a while, thus relieving some pressure from the system.\nUse Case#\nAs an example of what a GenStage can be useful for, let’s consider reading chunks of data from an external data source. In this case, we’ll use the Ethereum blockchain, since it fits this concept nicely.\nA blockchain is composed of a series of blocks, each one containing multiple transactions. If we want to process the entire blockchain (for example, to look up all transactions involving a given address, or to listen to it continuously when integrating with your application), a GenStage is a perfect fit.\nIn this context, each block can be considered as a single data item. Let’s see how this can be achieved.\nQuerying the Blockchain#\nWe’re going to use Infura’s public HTTP API to interact with the Ethereum blockchain. Let’s start by building a wrapper to its interface. I’ll be using the Tesla library for this (this is just a personal preference, feel free to choose your own).\ndefmodule EthSync.Infura do\n  use Tesla\n\n  plug(Tesla.Middleware.BaseUrl, \"https://ropsten.infura.io/\")\n\n  # encode/decode body as json\n  # Infura doesn't set the \"content-type\" header to \"application/json\"\n  # so we need to tell Tesla that we want text/plain requests to be decoded as well\n  plug(Tesla.Middleware.JSON, decode_content_types: [\"text/plain; charset=utf-8\"])\n\n  @doc \"Get an entire block\"\n  def get_block(number) do\n    case call(:eth_getBlockByNumber, [to_hex(number), true]) do\n      {:ok, nil} -&gt;\n        {:error, :block_not_found}\n\n      error -&gt;\n        error\n    end\n  end\n\n  @doc \"Sends a JSON-RPC call to the server\"\n  defp call(method, params \\\\ []) do\n    case post(\"\", %{jsonrpc: \"2.0\", id: \"call_id\", method: method, params: params}) do\n      {:ok, %Tesla.Env{status: 200, body: %{\"result\" =&gt; result}}} -&gt;\n        {:ok, result}\n\n      {:error, _} = error -&gt;\n        error\n    end\n  end\n\n  @doc \"Converts integer values to hex strings\"\n  def to_hex(decimal), do: \"0x\" &lt;&gt; Integer.to_string(decimal, 16)\nend\n\nWe’ll only need a single endpoint for this: getting a block’s data, given its index on the chain. The block number must be given in hexadecimal format, so we also need a helper method to handle the conversion.\nWe can verify that this is working via iex:\niex(1)&gt; EthSync.Infura.get_block(1)\n{:ok,\n %{\n   \"number\" =&gt; \"0x1\",\n   \"transactions\" =&gt; [],\n   # ...\n }\n}\n\niex(2)&gt; EthSync.Infura.get_block(1_000_000_000_000)\n{:error, :block_not_found}\n\nBuilding the Producer#\nOur Producer will be a process with the responsibility of fetching Ethereum blocks.\ndefmodule EthSync.Producer2 do\n  alias EthSync.Infura\n  use GenStage\n\n  def init(_) do\n    {:producer, 1}\n  end\n\n  def handle_demand(demand, next_block) when demand &gt; 0 do\n    IO.puts(\"Demanding #{demand}\")\n\n    blocks =\n      next_block..(next_block - 1 + demand)\n      |&gt; Enum.map(fn n -&gt;\n        IO.puts(\"Fetching block #{n}\")\n        Infura.get_block(n)\n      end)\n\n    {:noreply, blocks, next_block + length(blocks)}\n  end\nend\n\nBuilding the Consumer#\nThe Consumer will receive lists of blocks and then process them. In the example, we’ll use :timer.sleep/1 to simulate processing time since we’re not doing any actual work. Keep in mind that the list of blocks received is not necessarily the same as what was sent in the Producer. Items can be buffered according to the GenStage’s internal rules. It may also happen that you have multiple Consumers and items get split between them.\ndefmodule EthSync.Consumer do\n  alias EthSync.Infura\n  use GenStage\n\n  def init(_) do\n    {:consumer, nil}\n  end\n\n  def handle_events(blocks, _from, state) do\n    blocks\n    |&gt; Enum.each(fn\n      {:ok, %{\"number\" =&gt; n}} -&gt;\n        IO.puts(\"Received block #{n}\")\n        :timer.sleep(1_000)\n    end)\n\n    {:noreply, [], state}\n  end\nend\n\nWiring It All Up#\nTo start the pipeline, we need to start the processes for our Producer &amp; Consumer, and then link them together, so that items produced by the former get sent out to the latter:\niex&gt; {:ok, producer} = GenStage.start_link(Producer2, [])\n{:ok, #PID&lt;0.160.0&gt;}\n\niex&gt; {:ok, consumer} = GenStage.start_link(Consumer2, [])\n{:ok, #PID&lt;0.162.0&gt;}\n\niex&gt; GenStage.sync_subscribe(consumer, to: producer, max_demand: 3)\n{:ok, #Reference&lt;0.2486793675.579338241.116277&gt;}\nDemanding 3\nReceived block 0x1\nReceived block 0x2\nReceived block 0x3\nDemanding 1\nReceived block 0x4\nReceived block 0x5\nDemanding 1\n\nNotice that even though we start the Producer at the beginning, it only started fetching blocks once we wired the Consumer to it. That’s because there was no demand until that point. Additionally, even though we specify max_demand: 3, that’s not necessarily the amount requested at all times. Since we only have a single Consumer, and it takes 1 second to process each block, the GenStage is smart enough not to overflow it with too many blocks. It adjusts the number of events as needed.\n","id":"https://naps62.com/posts/understanding-elixir-genstage/","title":"Understanding Elixir’s GenStages: Querying the Blockchain"},"https://naps62.com/speaking/":{"body":"Let's fix our developer experience\nETHGlobal Lisbon (May 2023)\nLike many others, I come from a web development background. And I miss the developer experience from those days. Short feedback loops and low cognitive load are the marks of a good DevEx. Foundry has come a long way to improve things, but a lot more can still be done, particularly for those who don't read EVM over breakfast.\nThis is the story of the inefficiencies I found, the legacy standards we still rely on, and the tools I'm building to address it.\n\n  \n  \n\nAutomating your Way to Confidence\nDevOps Lisbon (May 2020)\nA few months ago, Github Actions went to public beta, and it ended up fitting\nour needs nicely. It also turned out that this CI has a lot more to offer than\nI was previously used to. This talk is about our journey to make better and\nfaster releases, about how I'm trying to deprecate our project managers, and\nabout how awesome Github Actions can be.\n\n  \n  \n\nSmart Contracts: A Beginner's Guide\nPixels Camp 2019\nLet's talk blockchain! But not the whole money thing. Smart Contracts are the\nreal juice. I will walk you through what a Smart Contract is and why you should\ncare. We will discuss how they differ from traditional computing paradigms, how\nto approach coding one, and how dangerous they can be.\n\n  \n  \n\nAn Introduction to Smart Contracts\nScaleConf Colombia 2018\nLet's talk blockchain! But not the whole money thing. Smart Contracts are the\nreal juice. I will walk you through what a Smart Contract is and why you should\ncare. We will discuss how they differ from traditional computing methods, and\nwhat makes this so revolutionary.\n\n  \n  \n\nMastering your Tools\nPyconf Otto (2017, Florence Italy)\nThis talk goes through some very practical advices about writing code\nefficiently: ranging from useful and perhaps-not-so-well-known tools, to some\neditor/terminal/OS configurations that I obsess over in order to tweak my\nenvironment to perfection.\n\n  \n  \n\n","id":"https://naps62.com/speaking/","title":""}},"docInfo":{"https://naps62.com/":{"body":32,"title":0},"https://naps62.com/posts/":{"body":0,"title":3},"https://naps62.com/posts/continuous-stuff-with-github-actions/":{"body":926,"title":4},"https://naps62.com/posts/easily-merging-pull-requests/":{"body":527,"title":4},"https://naps62.com/posts/flags-seeds-and-idempotency-elixir/":{"body":874,"title":6},"https://naps62.com/posts/focused-writing-in-vim/":{"body":576,"title":3},"https://naps62.com/posts/knowledge-base/":{"body":632,"title":5},"https://naps62.com/posts/metaprogramming-from-c-to-elixir/":{"body":839,"title":5},"https://naps62.com/posts/perfecting-a-css-3d-animation/":{"body":763,"title":4},"https://naps62.com/posts/pouring-protocols-in-elixir/":{"body":497,"title":3},"https://naps62.com/posts/routing-in-phoenix-umbrella-apps/":{"body":833,"title":4},"https://naps62.com/posts/smarter-heredoc-syntax-in-vim/":{"body":326,"title":4},"https://naps62.com/posts/super-powered-vim-i-projections/":{"body":393,"title":5},"https://naps62.com/posts/super-powered-vim-ii-snippets/":{"body":299,"title":6},"https://naps62.com/posts/super-powered-vim-iii-skeletons/":{"body":459,"title":6},"https://naps62.com/posts/tutorial-deploying-elixir-applications/":{"body":1378,"title":7},"https://naps62.com/posts/typespecs-and-behaviours-in-elixir/":{"body":785,"title":3},"https://naps62.com/posts/understanding-elixir-genstage/":{"body":738,"title":5},"https://naps62.com/speaking/":{"body":185,"title":0}},"length":19},"lang":"English"};